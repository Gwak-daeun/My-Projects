{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\score.js\";\nvar __jsx = React.createElement;\nimport { Rate, Row, Upload } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nconst Score = ({\n  comments\n}) => {\n  console.log(\"개별댓글 점수\", comments[0].rate);\n  console.log(\"댓글 안?? \", comments[0].Images[0].src);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n\n  //미리보기\n  const onPreview = async file => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow === null || imgWindow === void 0 ? void 0 : imgWindow.document.write(image.outerHTML);\n  };\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }, \"My rate is...\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Rate, {\n    style: {\n      fontSize: 50\n    },\n    disabled: true,\n    defaultValue: comment.rate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }\n  }, \"My commnet is...\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    showCount: true,\n    maxLength: 250,\n    defaultValue: comment.content,\n    readOnly: true,\n    style: {\n      height: 110,\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, \"I recommend this!\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, comments[0].Images[0] ? __jsx(\"img\", {\n    style: {\n      width: 100\n    },\n    src: `http://localhost:3065/${images[0].src}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }) : null, comments[0].Images[1] ? __jsx(\"img\", {\n    style: {\n      width: 100\n    },\n    src: `http://localhost:3065/${images[1].src}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }) : null));\n};\nexport default Score;","map":{"version":3,"names":["Rate","Row","Upload","TextArea","React","useState","Score","comments","console","log","rate","Images","src","fileList","setFileList","onPreview","file","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","map","comment","id","fontSize","content","height","resize","width","images"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/score.js"],"sourcesContent":["import { Rate, Row, Upload } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Score = ({comments}) => {\r\n\r\n    console.log(\"개별댓글 점수\", comments[0].rate)\r\n  console.log(\"댓글 안?? \", comments[0].Images[0].src);\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    \r\n\r\n          //미리보기\r\n          const onPreview = async (file) => {\r\n            let src = file.url;\r\n            if (!src) {\r\n              src = await new Promise((resolve) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n              });\r\n            }\r\n            const image = new Image();\r\n            image.src = src;\r\n            const imgWindow = window.open(src);\r\n            imgWindow?.document.write(image.outerHTML);\r\n          };\r\n    \r\n\r\n    return(\r\n        <>\r\n        <Row><h2>My rate is...</h2></Row>\r\n               <Row>\r\n               {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <Rate style={{fontSize: 50}} disabled defaultValue={comment.rate} />\r\n            </li>\r\n             ))}\r\n                {/* <Rate style={{fontSize: 50}} onChange={handleRate} value={post.Comments.rate} /> */}\r\n                </Row>  \r\n              <br />\r\n              <Row><h2>My commnet is...</h2></Row>\r\n              \r\n              <Row>\r\n              {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    defaultValue={comment.content}\r\n                    readOnly\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                    }}\r\n                />\r\n            </li>\r\n             ))}\r\n                </Row>\r\n                <br />\r\n                <Row><h2>I recommend this!</h2></Row>\r\n                {/* <Row><h3>아이템 추천은 2개까지 가능해요.</h3></Row> */}\r\n                <Row>\r\n                  \r\n              { comments[0].Images[0] ? <img style={{width: 100}} src={`http://localhost:3065/${images[0].src}`} /> : null }\r\n              { comments[0].Images[1] ? <img style={{width: 100}} src={`http://localhost:3065/${images[1].src}`} /> : null }\r\n\r\n                </Row>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Score;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}