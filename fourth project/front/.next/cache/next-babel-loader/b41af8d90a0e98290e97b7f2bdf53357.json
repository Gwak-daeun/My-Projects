{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\util\\\\dateCellRender.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Link from 'next/link';\nvar DateCellRender = function DateCellRender() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector.mainPosts;\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\n  console.log(\"mainposts길이: \", mainPosts.length);\n  //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\n\n  var getDayInfo = function getDayInfo() {\n    var calendarData;\n    var diaryMoment;\n    for (var i = 0; i < mainPosts.length; i++) {\n      console.log(\"생성 날짜\", moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\n      //  console.log(\"diaryMoment:::::\" + diaryMoment);\n\n      if (diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")) {\n        //  console.log(\"if문 실행\");\n        calendarData = [{\n          photo: mainPosts[i].Images[0].src,\n          title: mainPosts[i].lookName,\n          date: '2023-02-07'\n        }];\n      }\n    }\n    console.log(\"photo:::::\" + JSON.stringify(calendarData));\n    return calendarData || [];\n  };\n  var LookRander = function LookRander(_ref) {\n    var photo = _ref.photo,\n      title = _ref.title;\n    if (photo && title) {\n      return __jsx(React.Fragment, null, __jsx(\"h5\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, title), __jsx(Link, {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        style: {\n          width: 50\n        },\n        src: \"http://localhost:3065/\".concat(photo),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }\n      })));\n    } else {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n  var dayInfo = getDayInfo();\n\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n\n  return (\n    //  <img src={photo} style={{width:50}} />\n    __jsx(React.Fragment, null, dayInfo.map(function (info) {\n      return __jsx(React.Fragment, null, __jsx(\"li\", {\n        key: info.date,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 10\n        }\n      }, __jsx(\"h5\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }\n      }, info.title), __jsx(Link, {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }\n      }, __jsx(\"img\", {\n        style: {\n          width: 50\n        },\n        src: \"http://localhost:3065/\".concat(info.photo),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }\n      }))));\n    }))\n  );\n};\n_s(DateCellRender, \"zf+rAEzEiCW0nHHHgaXKn4vNzC8=\", false, function () {\n  return [useSelector];\n});\n_c = DateCellRender;\nexport default DateCellRender;\nvar _c;\n$RefreshReg$(_c, \"DateCellRender\");","map":{"version":3,"names":["React","useSelector","moment","Link","DateCellRender","state","post","mainPosts","console","log","JSON","stringify","length","getDayInfo","calendarData","diaryMoment","i","createdAt","format","photo","Images","src","title","lookName","date","LookRander","width","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/util/dateCellRender.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Link from 'next/link';\r\n\r\nconst DateCellRender = () => {\r\n\r\n   const {mainPosts} = useSelector((state) => state.post);\r\n\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\r\n   console.log(\"mainposts길이: \", mainPosts.length);\r\n //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\r\n\r\n   const getDayInfo = () => {\r\n      let calendarData;\r\n      let diaryMoment;\r\n      for( let i = 0; i < mainPosts.length; i++ ){\r\n         console.log(\"생성 날짜\",  moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\r\n         diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\r\n       //  console.log(\"diaryMoment:::::\" + diaryMoment);\r\n\r\n         if(diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")){\r\n          //  console.log(\"if문 실행\");\r\n            calendarData = [\r\n               {\r\n                  photo: mainPosts[i].Images[0].src,\r\n                  title: mainPosts[i].lookName,\r\n                  date: '2023-02-07'\r\n               }\r\n            ];\r\n         }\r\n      }\r\n      console.log(\"photo:::::\" + JSON.stringify(calendarData));\r\n      return calendarData || [];\r\n   };\r\n\r\n   const LookRander = ({photo, title}) => {\r\n\r\n      if(photo && title){\r\n         return(\r\n            <>\r\n            <h5>{title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n         </Link>\r\n         </>\r\n         );\r\n      }\r\n      else{\r\n         return(\r\n            <div></div>\r\n         );\r\n      }\r\n\r\n   }\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n   //  <img src={photo} style={{width:50}} />\r\n  <>\r\n   {dayInfo.map((info) => (\r\n      <>\r\n         \r\n         \r\n         <li key={info.date}>\r\n         <h5>{info.title}</h5>\r\n         <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${info.photo}`} />\r\n         </Link>\r\n         </li>\r\n         {/* <h5>{info.title}</h5>\r\n         <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${info.photo}`} />\r\n         </Link> */}\r\n\r\n      </>\r\n      \r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":"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"},"metadata":{},"sourceType":"module"}