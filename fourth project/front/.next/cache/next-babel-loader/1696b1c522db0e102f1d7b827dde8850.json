{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport Login from './login';\nimport Profile from './profile';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport DateCellRender from '../components/dateCellRender';\n\n//const fetcher = (url) => axios.get(url, {withCredentials: true}).then((result) => result.data);\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n\n  //  const {data, error} = useSWR(`http://localhost:3065/posts/${me.id}/allLooks`, fetcher);\n\n  console.log(\"인덱스 Me 데이터\", me);\n\n  //  console.log(\":::::::me:::::\" + JSON.stringify(me));\n  //  console.log(\"post:::::\" + JSON.stringify(mainPosts));\n\n  // if(error){\n  //     console.error(error);\n  //     return window.alert('게시글 로딩 중 에러 발생');\n  // }\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, me ? __jsx(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }) : __jsx(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }), me ? __jsx(DateCellRender, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }) : null);\n};\n\n// export const getServerSideProps = wrapper.getServerSideProps(async(context) => { \n//         const cookie = context.req ? context.req.headers.cookie : '';\n//         axios.defaults.headers.Cookie = ''; \n//         if(context.req && cookie){ \n//             axios.defaults.headers.Cookie = cookie;\n//         }\n//         context.store.dispatch({\n//             type: LOAD_MY_INFO_REQUEST\n//         });\n\n//        context.store.dispatch(END);\n//        await context.store.sagaTask.toPromise();\n//     });\n\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","LOAD_MY_INFO_REQUEST","Login","Profile","wrapper","axios","END","useSWR","DateCellRender","Home","dispatch","mainPosts","state","post","type","me","user","console","log"],"sources":["C:/Users/내컴/Desktop/fashionary/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport Login from './login';\r\nimport Profile from './profile';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport useSWR from 'swr';\r\nimport DateCellRender from '../components/dateCellRender';\r\n\r\n//const fetcher = (url) => axios.get(url, {withCredentials: true}).then((result) => result.data);\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {mainPosts} = useSelector((state) => state.post);\r\n    \r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_MY_INFO_REQUEST\r\n        });\r\n        \r\n    },[]);\r\n    \r\n    const {me} = useSelector((state) => state.user);\r\n\r\n\r\n //  const {data, error} = useSWR(`http://localhost:3065/posts/${me.id}/allLooks`, fetcher);\r\n\r\n    console.log(\"인덱스 Me 데이터\", me);\r\n\r\n  //  console.log(\":::::::me:::::\" + JSON.stringify(me));\r\n  //  console.log(\"post:::::\" + JSON.stringify(mainPosts));\r\n\r\n    // if(error){\r\n    //     console.error(error);\r\n    //     return window.alert('게시글 로딩 중 에러 발생');\r\n    // }\r\n\r\nreturn (\r\n    <AppLayout>\r\n        {me ? <Profile /> : <Login /> }\r\n        {me ? <DateCellRender /> : null }\r\n    </AppLayout>\r\n    );\r\n}\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(async(context) => { \r\n//         const cookie = context.req ? context.req.headers.cookie : '';\r\n//         axios.defaults.headers.Cookie = ''; \r\n//         if(context.req && cookie){ \r\n//             axios.defaults.headers.Cookie = cookie;\r\n//         }\r\n//         context.store.dispatch({\r\n//             type: LOAD_MY_INFO_REQUEST\r\n//         });\r\n\r\n//        context.store.dispatch(END);\r\n//        await context.store.sagaTask.toPromise();\r\n//     });\r\n    \r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,YAAY;AAChC,OAAOC,MAAM,MAAM,KAAK;AACxB,OAAOC,cAAc,MAAM,8BAA8B;;AAEzD;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAEf,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAM;IAACa;EAAS,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEtDhB,SAAS,CAAC,MAAM;IACZa,QAAQ,CAAC;MACLI,IAAI,EAAEb;IACV,CAAC,CAAC;EAEN,CAAC,EAAC,EAAE,CAAC;EAEL,MAAM;IAACc;EAAE,CAAC,GAAGhB,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC;;EAGlD;;EAEGC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,EAAE,CAAC;;EAE/B;EACA;;EAEE;EACA;EACA;EACA;;EAEJ,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACLA,EAAE,GAAG,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAAG,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC5BA,EAAE,GAAG,MAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAAG,IAAI,CACvB;AAEhB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,eAAeN,IAAI"},"metadata":{},"sourceType":"module"}