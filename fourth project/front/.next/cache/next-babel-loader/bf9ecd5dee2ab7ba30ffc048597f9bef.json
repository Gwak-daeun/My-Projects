{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\util\\\\dateCellRender.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { createElement, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Link from 'next/link';\nimport { LOAD_USER_CALENDAR_DATA_REQUEST } from \"../reducers/user\";\nvar DateCellRender = function DateCellRender(value) {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    userCalendarData = _useSelector.userCalendarData,\n    me = _useSelector.me;\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_CALENDAR_DATA_REQUEST,\n      data: me.id\n    });\n  }, []);\n\n  // console.log(\"UserCalendarData:::::::::\" + JSON.stringify(userCalendarData));\n  // console.log(\"UserCalendarData길이: \", userCalendarData.length);\n\n  var getDayInfo = function getDayInfo() {\n    var calendarData = [];\n    var diaryMoment;\n    for (var i = 0; i < userCalendarData.length; i++) {\n      // console.log(\"생성 날짜\",  moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\");\n\n      // console.log(\"다이어리모맨트:\", diaryMoment);\n\n      if (diaryMoment) {\n        var _userCalendarData$i, _userCalendarData$i$I;\n        calendarData.push({\n          photo: (_userCalendarData$i = userCalendarData[i]) === null || _userCalendarData$i === void 0 ? void 0 : (_userCalendarData$i$I = _userCalendarData$i.Images[0]) === null || _userCalendarData$i$I === void 0 ? void 0 : _userCalendarData$i$I.src,\n          title: userCalendarData[i].lookName,\n          date: diaryMoment,\n          createdAt: userCalendarData[i].createdAt,\n          id: userCalendarData[i].id\n        });\n\n        // console.log(\"이미지???\", userCalendarData[i].Images[0].src);\n      }\n    }\n\n    // console.log(\"calendarData:::::\" + JSON.stringify(calendarData));\n    return calendarData || [];\n  };\n  var PhotoRander = function PhotoRander(_ref) {\n    var date = _ref.date,\n      photo = _ref.photo,\n      postId = _ref.postId;\n    //   console.log(\"뉴데이트:::\", new Date('2023-02-06T08:53:06.000Z').getDay());\n    // console.log(\"캘린더 날짜: \", new Date(value).toLocaleDateString());\n    // console.log(\"게시글 날짜: \", new Date(date).toLocaleDateString());\n\n    switch (moment(value).format(\"YY-MM-DD\")) {\n      case moment(date).format(\"YY-MM-DD\"):\n        return __jsx(Link, {\n          href: \"http://localhost:3000/post/\".concat(postId),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          style: {\n            width: 50\n          },\n          src: \"http://localhost:3065/\".concat(photo),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }));\n      default:\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        });\n    }\n  };\n  var NameRander = function NameRander(_ref2) {\n    var date = _ref2.date,\n      name = _ref2.name;\n    switch (moment(value).format(\"YY-MM-DD\")) {\n      case moment(date).format(\"YY-MM-DD\"):\n        return __jsx(\"h5\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, name);\n      default:\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        });\n    }\n  };\n  var dayInfo = getDayInfo();\n\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, dayInfo.map(function (info) {\n    return __jsx(\"div\", {\n      key: info.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    }, __jsx(NameRander, {\n      date: info.createdAt,\n      name: info.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), __jsx(PhotoRander, {\n      postId: info.id,\n      date: info.createdAt,\n      photo: info.photo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }));\n  }));\n};\n_s(DateCellRender, \"vl9+lU3ZemZBShDvMhAzagl4Zio=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DateCellRender;\nexport default DateCellRender;\nvar _c;\n$RefreshReg$(_c, \"DateCellRender\");","map":{"version":3,"names":["React","createElement","useEffect","useDispatch","useSelector","moment","Link","LOAD_USER_CALENDAR_DATA_REQUEST","DateCellRender","value","dispatch","state","user","userCalendarData","me","type","data","id","getDayInfo","calendarData","diaryMoment","i","length","createdAt","format","push","photo","Images","src","title","lookName","date","PhotoRander","postId","width","NameRander","name","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/util/dateCellRender.js"],"sourcesContent":["import React, { createElement, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Link from 'next/link';\r\nimport { LOAD_USER_CALENDAR_DATA_REQUEST } from \"../reducers/user\";\r\n\r\nconst DateCellRender = (value) => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const {userCalendarData, me} = useSelector((state) => state.user);\r\n\r\n   useEffect(() => {\r\n      dispatch({\r\n         type: LOAD_USER_CALENDAR_DATA_REQUEST,\r\n         data: me.id\r\n      });\r\n   }, []);\r\n\r\n   // console.log(\"UserCalendarData:::::::::\" + JSON.stringify(userCalendarData));\r\n   // console.log(\"UserCalendarData길이: \", userCalendarData.length);\r\n\r\n   const getDayInfo = () => {\r\n      const calendarData = [];\r\n      let diaryMoment;\r\n\r\n      for( let i = 0; i < userCalendarData.length; i++ ){\r\n         // console.log(\"생성 날짜\",  moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\"));\r\n         diaryMoment = moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\");\r\n\r\n         // console.log(\"다이어리모맨트:\", diaryMoment);\r\n\r\n         if(diaryMoment){\r\n            calendarData.push( {\r\n               photo: userCalendarData[i]?.Images[0]?.src,\r\n               title: userCalendarData[i].lookName,\r\n               date: diaryMoment,\r\n               createdAt: userCalendarData[i].createdAt,\r\n               id: userCalendarData[i].id\r\n            });\r\n              \r\n            // console.log(\"이미지???\", userCalendarData[i].Images[0].src);\r\n         }\r\n      }\r\n\r\n      // console.log(\"calendarData:::::\" + JSON.stringify(calendarData));\r\n      return calendarData || [];\r\n   };\r\n\r\n   const PhotoRander = ({date, photo, postId}) => {\r\n\r\n   //   console.log(\"뉴데이트:::\", new Date('2023-02-06T08:53:06.000Z').getDay());\r\n   // console.log(\"캘린더 날짜: \", new Date(value).toLocaleDateString());\r\n   // console.log(\"게시글 날짜: \", new Date(date).toLocaleDateString());\r\n   \r\n      switch(moment(value).format(\"YY-MM-DD\")){\r\n         case moment(date).format(\"YY-MM-DD\"):  \r\n         return (\r\n            <Link href={`http://localhost:3000/post/${postId}`} >\r\n                <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n            </Link>\r\n         );\r\n         default:\r\n         return(\r\n            <div></div>\r\n         );   \r\n      }\r\n   };\r\n\r\n   const NameRander = ({date, name}) => {\r\n\r\n      switch(moment(value).format(\"YY-MM-DD\")){\r\n         case moment(date).format(\"YY-MM-DD\") : \r\n         return(\r\n            <h5>{name}</h5>\r\n         );\r\n         default:\r\n         return(\r\n            <div></div>\r\n         );   \r\n      }\r\n\r\n   };\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n  <div>\r\n   {dayInfo.map((info) => (\r\n\r\n         <div key={info.id} >\r\n            {/* <LookRander date={info.date} photo={info.photo} title={info.title} />  */}\r\n              {/* <h5>{info.title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${info.photo}`} />\r\n         </Link> */}\r\n          <NameRander date={info.createdAt}  name={info.title} /> \r\n         <PhotoRander postId={info.id} date={info.createdAt} photo={info.photo} />\r\n         </div>\r\n\r\n      \r\n   ))}\r\n  </div>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":"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"},"metadata":{},"sourceType":"module"}