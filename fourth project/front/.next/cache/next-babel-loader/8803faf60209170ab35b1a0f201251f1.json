{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\n\nimport produce from '../util/produce';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  singlePost: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  uploadUpdateLookimageLoading: false,\n  uploadUpdateLookimageError: null,\n  uploadUpdateLookimageDone: false,\n  updateCommentRateLoading: false,\n  updateCommentRateError: null,\n  updateCommentRateDone: false,\n  checkDateLoading: false,\n  checkDateError: null,\n  checkDateDone: false\n};\n\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n//   id: shortId.generate(),\n//   User: {\n//     id: shortId.generate(),\n//     nickname: faker.name.findName(),\n//   },\n//   content: faker.lorem.paragraph(),\n//   Images: [{\n//     src: faker.image.image(),\n//   }],\n//   Comments: [{\n//     User: {\n//       id: shortId.generate(),\n//       nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.sentence(),\n//   }],\n// }));\n\nexport var CHECK_DATE_REQUEST = 'CHECK_DATE_REQUEST';\nexport var CHECK_DATE_SUCCESS = 'CHECK_DATE_SUCCESS';\nexport var CHECK_DATE_FAILURE = 'CHECK_DATE_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport var REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport var REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport var UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\nexport var UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\nexport var UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var UPLOAD_UPDATE_LOOK_IMAGE_REQUEST = 'UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\nexport var UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS = 'UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\nexport var UPLOAD_UPDATE_LOOK_IMAGE_FAILURE = 'UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n// export const addPost = (data) => ({\n//   type: ADD_POST_REQUEST,\n//   data,\n// });\n\n// export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n};\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\n          break;\n        }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          console.log(\"reducer image\", action.data);\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.singlePost;\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.singlePost;\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      // case LOAD_USER_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      // case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length === 10;\n        break;\n      // case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case UPDATE_POST_REQUEST:\n        draft.updatePostLoading = true;\n        draft.updatePostDone = false;\n        draft.updatePostError = null;\n        break;\n      case UPDATE_POST_SUCCESS:\n        draft.updatePostLoading = false;\n        draft.updatePostDone = true;\n        console.log(\"업데이트 완료 후 데이터: \", action.data);\n        draft.singlePost = action.data;\n        break;\n      case UPDATE_POST_FAILURE:\n        draft.updatePostLoading = false;\n        draft.updatePostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.singlePost;\n          _post2.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          draft.imagePaths = [];\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      case REMOVE_COMMENT_REQUEST:\n        draft.removeCommentLoading = true;\n        draft.removeCommentDone = false;\n        draft.removeCommentError = null;\n      case REMOVE_COMMENT_SUCCESS:\n        draft.removeCommentLoading = false;\n        draft.removeCommentDone = true;\n        console.log(\"댓글 삭제 리듀서: \", action.data);\n        draft.singlePost.Comments = draft.singlePost.Comments.filter(function (v) {\n          return v.id !== action.data.id;\n        });\n        break;\n      case REMOVE_COMMENT_FAILURE:\n        draft.removeCommentLoading = false;\n        draft.removeCommentError = action.error;\n        break;\n      case UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\n        draft.uploadUpdateLookimageLoading = true;\n        draft.uploadUpdateLookimageError = null;\n        draft.uploadUpdateLookimageDone = false;\n        break;\n      case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\n        draft.imagePaths = action.data;\n        draft.uploadUpdateLookimageDone = true;\n        draft.uploadUpdateLookimageLoading = false;\n        break;\n      case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\n        draft.uploadUpdateLookimageLoading = false;\n        draft.uploadUpdateLookimageError = action.error;\n        break;\n      case UPDATE_COMMENT_RATE_REQUEST:\n        draft.updateCommentRateLoading = true;\n        draft.updateCommentRateError = null;\n        draft.updateCommentRateDone = false;\n        break;\n      case UPDATE_COMMENT_RATE_SUCCESS:\n        // const post = draft.singlePost;\n        // post.unshift(action.data);\n        console.log(\"댓글 점수 수정 성공: \", action.data);\n        draft.updateCommentRateLoading = false;\n        draft.updateCommentRateDone = true;\n        draft.singlePost.rateAverage = action.data.rateAverage;\n        break;\n      case UPDATE_COMMENT_RATE_FAILURE:\n        draft.updateCommentRateLoading = false;\n        draft.updateCommentRateError = action.error;\n        break;\n      case CHECK_DATE_REQUEST:\n        draft.checkDateLoading = true;\n        draft.checkDateError = null;\n        draft.checkDateDone = false;\n        break;\n      case CHECK_DATE_SUCCESS:\n        draft.checkDateLoading = false;\n        draft.checkDateDone = true;\n        break;\n      case CHECK_DATE_FAILURE:\n        draft.checkDateLoading = false;\n        console.log(action.error, \"날짜 에러 확인\");\n        draft.checkDateError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","singlePost","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","removeCommentLoading","removeCommentDone","removeCommentError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","uploadUpdateLookimageLoading","uploadUpdateLookimageError","uploadUpdateLookimageDone","updateCommentRateLoading","updateCommentRateError","updateCommentRateDone","checkDateLoading","checkDateError","checkDateDone","CHECK_DATE_REQUEST","CHECK_DATE_SUCCESS","CHECK_DATE_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","UPDATE_COMMENT_RATE_REQUEST","UPDATE_COMMENT_RATE_SUCCESS","UPDATE_COMMENT_RATE_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","UPLOAD_UPDATE_LOOK_IMAGE_REQUEST","UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS","UPLOAD_UPDATE_LOOK_IMAGE_FAILURE","REMOVE_IMAGE","dummyPost","data","id","content","User","nickname","Images","Comments","dummyComment","shortId","generate","reducer","state","action","draft","type","filter","v","i","unshift","error","console","log","post","Likers","push","UserId","concat","length","PostId","rateAverage"],"sources":["C:/Users/내컴/Desktop/fashionary/front/reducers/post.js"],"sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\n\r\nimport produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  singlePost: null,\r\n  hasMorePosts: true,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n  uploadUpdateLookimageLoading: false,\r\n  uploadUpdateLookimageError: null,\r\n  uploadUpdateLookimageDone: false,\r\n  updateCommentRateLoading: false,\r\n  updateCommentRateError: null,\r\n  updateCommentRateDone: false,\r\n  checkDateLoading: false,\r\n  checkDateError: null,\r\n  checkDateDone: false,\r\n};\r\n\r\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n//   id: shortId.generate(),\r\n//   User: {\r\n//     id: shortId.generate(),\r\n//     nickname: faker.name.findName(),\r\n//   },\r\n//   content: faker.lorem.paragraph(),\r\n//   Images: [{\r\n//     src: faker.image.image(),\r\n//   }],\r\n//   Comments: [{\r\n//     User: {\r\n//       id: shortId.generate(),\r\n//       nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.sentence(),\r\n//   }],\r\n// }));\r\n\r\nexport const CHECK_DATE_REQUEST = 'CHECK_DATE_REQUEST';\r\nexport const CHECK_DATE_SUCCESS = 'CHECK_DATE_SUCCESS';\r\nexport const CHECK_DATE_FAILURE = 'CHECK_DATE_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\r\n\r\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\r\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\r\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST ='UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS ='UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE ='UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n// export const addPost = (data) => ({\r\n//   type: ADD_POST_REQUEST,\r\n//   data,\r\n// });\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n      case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:{\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\r\n      break;\r\n    }\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n      break;\r\n    \r\n      case UPLOAD_IMAGES_SUCCESS:{\r\n        console.log(\"reducer image\", action.data);\r\n        draft.imagePaths = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n      break;\r\n      // case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n      // case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = draft.mainPosts.length === 10;\r\n      break;\r\n      // case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n      case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.singlePost = action.data;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n      case UPDATE_POST_REQUEST:\r\n        draft.updatePostLoading = true;\r\n        draft.updatePostDone = false;\r\n        draft.updatePostError = null;\r\n      break;\r\n      case UPDATE_POST_SUCCESS:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostDone = true;\r\n        console.log(\"업데이트 완료 후 데이터: \", action.data);\r\n        draft.singlePost = action.data;\r\n      break;\r\n      case UPDATE_POST_FAILURE:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.singlePost;\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      draft.imagePaths = [];\r\n      break;\r\n      }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case REMOVE_COMMENT_REQUEST:\r\n      \r\n      draft.removeCommentLoading = true;\r\n      draft.removeCommentDone = false;\r\n      draft.removeCommentError = null;    \r\n    case REMOVE_COMMENT_SUCCESS:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentDone = true;\r\n      console.log(\"댓글 삭제 리듀서: \", action.data);\r\n      draft.singlePost.Comments = draft.singlePost.Comments.filter((v) => v.id !== action.data.id);\r\n      break;\r\n    case REMOVE_COMMENT_FAILURE:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentError = action.error;\r\n      break;\r\n\r\n    case  UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\r\n      draft.uploadUpdateLookimageLoading = true;\r\n      draft.uploadUpdateLookimageError = null;\r\n      draft.uploadUpdateLookimageDone = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\r\n      draft.imagePaths = action.data;\r\n      draft.uploadUpdateLookimageDone = true;\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      draft.uploadUpdateLookimageError = action.error;\r\n      break;\r\n\r\n      case UPDATE_COMMENT_RATE_REQUEST:\r\n        draft.updateCommentRateLoading = true;\r\n        draft.updateCommentRateError =  null;\r\n        draft.updateCommentRateDone = false;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_SUCCESS:\r\n\r\n        // const post = draft.singlePost;\r\n        // post.unshift(action.data);\r\n        console.log(\"댓글 점수 수정 성공: \", action.data);\r\n        draft.updateCommentRateLoading = false; \r\n        draft.updateCommentRateDone = true;\r\n         draft.singlePost.rateAverage = action.data.rateAverage;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_FAILURE:\r\n        draft.updateCommentRateLoading = false;\r\n        draft.updateCommentRateError =  action.error;\r\n        break;\r\n\r\n      case CHECK_DATE_REQUEST:\r\n        draft.checkDateLoading= true;\r\n        draft.checkDateError =  null;\r\n        draft.checkDateDone = false;\r\n        break;\r\n      case  CHECK_DATE_SUCCESS:\r\n        draft.checkDateLoading= false;\r\n        draft.checkDateDone = true;\r\n        break;\r\n      case CHECK_DATE_FAILURE:\r\n        draft.checkDateLoading= false;\r\n        console.log(action.error, \"날짜 에러 확인\");\r\n        draft.checkDateError =  action.error;\r\n        break;\r\n      default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}