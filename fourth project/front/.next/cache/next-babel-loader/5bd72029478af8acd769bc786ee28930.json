{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\n\nimport produce from '../util/produce';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  singlePost: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\n\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n//   id: shortId.generate(),\n//   User: {\n//     id: shortId.generate(),\n//     nickname: faker.name.findName(),\n//   },\n//   content: faker.lorem.paragraph(),\n//   Images: [{\n//     src: faker.image.image(),\n//   }],\n//   Comments: [{\n//     User: {\n//       id: shortId.generate(),\n//       nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.sentence(),\n//   }],\n// }));\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n// export const addPost = (data) => ({\n//   type: ADD_POST_REQUEST,\n//   data,\n// });\n\n// export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n    case RETWEET_SUCCESS:\n      {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\n        break;\n      }\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetError = action.error;\n      break;\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = null;\n      break;\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        console.log(\"reducer image\", action.data);\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    // case LOAD_USER_POSTS_REQUEST:\n    case LOAD_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    // case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.hasMorePosts = draft.mainPosts.length === 10;\n      break;\n    // case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      console.log(\"reducer comment image: \", action.data);\n      console.log(\"???: \", draft.mainPosts.find(v => v.id === action.data.PostId));\n      const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n      post.Comments.unshift(action.data);\n      draft.addCommentLoading = false;\n      draft.addCommentDone = true;\n      //  draft.imagePaths = [];\n      break;\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","singlePost","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","dummyPost","data","id","content","User","nickname","Images","Comments","dummyComment","shortId","generate","reducer","state","action","draft","type","filter","v","i","unshift","error","console","log","post","find","PostId","Likers","push","UserId","concat","length"],"sources":["C:/Users/내컴/Desktop/fashionary/front/reducers/post.js"],"sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\n\r\nimport produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  singlePost: null,\r\n  hasMorePosts: true,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n};\r\n\r\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n//   id: shortId.generate(),\r\n//   User: {\r\n//     id: shortId.generate(),\r\n//     nickname: faker.name.findName(),\r\n//   },\r\n//   content: faker.lorem.paragraph(),\r\n//   Images: [{\r\n//     src: faker.image.image(),\r\n//   }],\r\n//   Comments: [{\r\n//     User: {\r\n//       id: shortId.generate(),\r\n//       nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.sentence(),\r\n//   }],\r\n// }));\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n// export const addPost = (data) => ({\r\n//   type: ADD_POST_REQUEST,\r\n//   data,\r\n// });\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n      case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:{\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\r\n      break;\r\n    }\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n      break;\r\n    \r\n      case UPLOAD_IMAGES_SUCCESS:{\r\n        console.log(\"reducer image\", action.data);\r\n        draft.imagePaths = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS:{\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS:{\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n      break;\r\n      // case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n      // case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = draft.mainPosts.length === 10;\r\n      break;\r\n      // case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n      case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.singlePost = action.data;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n      case ADD_COMMENT_SUCCESS: \r\n      console.log(\"reducer comment image: \", action.data);\r\n      console.log(\"???: \", draft.mainPosts.find((v) => v.id === action.data.PostId));\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n    //  draft.imagePaths = [];\r\n      break;\r\n      \r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"],"mappings":"AAAA;AACA;;AAEA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,IAAI;EAChBC,YAAY,EAAE,IAAI;EAClBC,mBAAmB,EAAE,KAAK;EAC1BC,gBAAgB,EAAE,KAAK;EACvBC,iBAAiB,EAAE,IAAI;EACvBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,gBAAgB,EAAE,KAAK;EACvBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAClBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAE5D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AAEpD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AAEtD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AAEpD,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAEhE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AAEtE,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAEhD,OAAO,MAAMC,YAAY,GAAG,cAAc;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,IAAI,KAAM;EAC3BC,EAAE,EAAED,IAAI,CAACC,EAAE;EACXC,OAAO,EAAEF,IAAI,CAACE,OAAO;EACrBC,IAAI,EAAE;IACJF,EAAE,EAAE,CAAC;IACLG,QAAQ,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAIP,IAAI,KAAM;EAC9BC,EAAE,EAAEO,OAAO,CAACC,QAAQ,EAAE;EACtBP,OAAO,EAAEF,IAAI;EACbG,IAAI,EAAE;IACJF,EAAE,EAAE,CAAC;IACLG,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AACF;AACA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAG9E,YAAY,EAAE+E,MAAM,KAAKhF,OAAO,CAAC+E,KAAK,EAAGE,KAAK,IAAK;EAC1E,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAKhB,YAAY;MACfe,KAAK,CAAC9E,UAAU,GAAG8E,KAAK,CAAC9E,UAAU,CAACgF,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,MAAM,CAACZ,IAAI,CAAC;MACvE;IACA,KAAKL,eAAe;MACpBkB,KAAK,CAACnD,cAAc,GAAG,IAAI;MAC3BmD,KAAK,CAAClD,WAAW,GAAG,KAAK;MACzBkD,KAAK,CAACjD,YAAY,GAAG,IAAI;MACzB;IACF,KAAKgC,eAAe;MAAC;QACnBiB,KAAK,CAACnD,cAAc,GAAG,KAAK;QAC5BmD,KAAK,CAAClD,WAAW,GAAG,IAAI;QACxBkD,KAAK,CAAC/E,SAAS,CAACoF,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC,CAAC,CAAC;QACtC;MACF;IACA,KAAKH,eAAe;MAClBgB,KAAK,CAACnD,cAAc,GAAG,KAAK;MAC5BmD,KAAK,CAACjD,YAAY,GAAGgD,MAAM,CAACO,KAAK;MACjC;IACF,KAAKtD,qBAAqB;MACxBgD,KAAK,CAAC3E,mBAAmB,GAAG,IAAI;MAChC2E,KAAK,CAAC1E,gBAAgB,GAAG,KAAK;MAC9B0E,KAAK,CAACzE,iBAAiB,GAAG,IAAI;MAC9B;IAEA,KAAK0B,qBAAqB;MAAC;QACzBsD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,MAAM,CAACZ,IAAI,CAAC;QACzCa,KAAK,CAAC9E,UAAU,GAAG6E,MAAM,CAACZ,IAAI;QAC9Ba,KAAK,CAAC3E,mBAAmB,GAAG,KAAK;QACjC2E,KAAK,CAAC1E,gBAAgB,GAAG,IAAI;QAC7B;MACF;IACF,KAAK4B,qBAAqB;MACxB8C,KAAK,CAAC3E,mBAAmB,GAAG,KAAK;MACjC2E,KAAK,CAACzE,iBAAiB,GAAGwE,MAAM,CAACO,KAAK;MACtC;IAEF,KAAKnD,iBAAiB;MACpB6C,KAAK,CAACxE,eAAe,GAAG,IAAI;MAC5BwE,KAAK,CAACvE,YAAY,GAAG,KAAK;MAC1BuE,KAAK,CAACtE,aAAa,GAAG,IAAI;MAC1B;IACF,KAAK0B,iBAAiB;MAAC;QACrB,MAAMqD,IAAI,GAAGT,KAAK,CAAC/E,SAAS,CAACyF,IAAI,CAAEP,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACwB,MAAM,CAAC;QACrEF,IAAI,CAACG,MAAM,CAACC,IAAI,CAAC;UAACzB,EAAE,EAAEW,MAAM,CAACZ,IAAI,CAAC2B;QAAM,CAAC,CAAC;QAC1Cd,KAAK,CAACxE,eAAe,GAAG,KAAK;QAC7BwE,KAAK,CAACvE,YAAY,GAAG,IAAI;QACzB;MACF;IACA,KAAK4B,iBAAiB;MACpB2C,KAAK,CAACxE,eAAe,GAAG,KAAK;MAC7BwE,KAAK,CAACtE,aAAa,GAAGqE,MAAM,CAACO,KAAK;MAClC;IACF,KAAKhD,mBAAmB;MACtB0C,KAAK,CAACrE,iBAAiB,GAAG,IAAI;MAC9BqE,KAAK,CAACpE,cAAc,GAAG,KAAK;MAC5BoE,KAAK,CAACnE,eAAe,GAAG,IAAI;MAC5B;IACF,KAAK0B,mBAAmB;MAAC;QACvB,MAAMkD,IAAI,GAAGT,KAAK,CAAC/E,SAAS,CAACyF,IAAI,CAAEP,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACwB,MAAM,CAAC;QACrEF,IAAI,CAACG,MAAM,GAAGH,IAAI,CAACG,MAAM,CAACV,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAAC2B,MAAM,CAAC;QACpEd,KAAK,CAACrE,iBAAiB,GAAG,KAAK;QAC/BqE,KAAK,CAACpE,cAAc,GAAG,IAAI;QAC3B;MACF;IACA,KAAK4B,mBAAmB;MACtBwC,KAAK,CAACrE,iBAAiB,GAAG,KAAK;MAC/BqE,KAAK,CAACnE,eAAe,GAAGkE,MAAM,CAACO,KAAK;MACpC;IACA;IACE,KAAK7C,kBAAkB;IACvB,KAAKS,0BAA0B;MACjC8B,KAAK,CAAClE,gBAAgB,GAAG,IAAI;MAC7BkE,KAAK,CAACjE,aAAa,GAAG,KAAK;MAC3BiE,KAAK,CAAChE,cAAc,GAAG,IAAI;MAC3B;IACA;IACE,KAAKmC,0BAA0B;IAC/B,KAAKT,kBAAkB;MACzBsC,KAAK,CAAClE,gBAAgB,GAAG,KAAK;MAC9BkE,KAAK,CAACjE,aAAa,GAAG,IAAI;MAC1BiE,KAAK,CAAC/E,SAAS,GAAG+E,KAAK,CAAC/E,SAAS,CAAC8F,MAAM,CAAChB,MAAM,CAACZ,IAAI,CAAC;MACrDa,KAAK,CAAC5E,YAAY,GAAG4E,KAAK,CAAC/E,SAAS,CAAC+F,MAAM,KAAK,EAAE;MAClD;IACA;IACE,KAAK5C,0BAA0B;IAC/B,KAAKT,kBAAkB;MACzBqC,KAAK,CAAClE,gBAAgB,GAAG,KAAK;MAC9BkE,KAAK,CAAChE,cAAc,GAAG+D,MAAM,CAACO,KAAK;MACnC;IACA,KAAK1C,iBAAiB;MACtBoC,KAAK,CAAC/D,eAAe,GAAG,IAAI;MAC5B+D,KAAK,CAAC9D,YAAY,GAAG,KAAK;MAC1B8D,KAAK,CAAC7D,aAAa,GAAG,IAAI;MAC1B;IACF,KAAK0B,iBAAiB;MACpBmC,KAAK,CAAC/D,eAAe,GAAG,KAAK;MAC7B+D,KAAK,CAAC9D,YAAY,GAAG,IAAI;MACzB8D,KAAK,CAAC7E,UAAU,GAAG4E,MAAM,CAACZ,IAAI;MAC9B;IACF,KAAKrB,iBAAiB;MACpBkC,KAAK,CAAC/D,eAAe,GAAG,KAAK;MAC7B+D,KAAK,CAAC7D,aAAa,GAAG4D,MAAM,CAACO,KAAK;MAClC;IACF,KAAKjC,gBAAgB;MACnB2B,KAAK,CAAC5D,cAAc,GAAG,IAAI;MAC3B4D,KAAK,CAAC3D,WAAW,GAAG,KAAK;MACzB2D,KAAK,CAAC1D,YAAY,GAAG,IAAI;MACzB;IACF,KAAKgC,gBAAgB;MACnB0B,KAAK,CAAC5D,cAAc,GAAG,KAAK;MAC5B4D,KAAK,CAAC3D,WAAW,GAAG,IAAI;MACxB2D,KAAK,CAAC/E,SAAS,CAACoF,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC;MACpCa,KAAK,CAAC9E,UAAU,GAAG,EAAE,CAAC,CAAC;MACvB;IACF,KAAKqD,gBAAgB;MACnByB,KAAK,CAAC5D,cAAc,GAAG,KAAK;MAC5B4D,KAAK,CAAC1D,YAAY,GAAGyD,MAAM,CAACO,KAAK;MACjC;IACF,KAAK9B,mBAAmB;MACtBwB,KAAK,CAACzD,iBAAiB,GAAG,IAAI;MAC9ByD,KAAK,CAACxD,cAAc,GAAG,KAAK;MAC5BwD,KAAK,CAACvD,eAAe,GAAG,IAAI;MAC5B;IACF,KAAKgC,mBAAmB;MACtBuB,KAAK,CAACzD,iBAAiB,GAAG,KAAK;MAC/ByD,KAAK,CAACxD,cAAc,GAAG,IAAI;MAC3BwD,KAAK,CAAC/E,SAAS,GAAG+E,KAAK,CAAC/E,SAAS,CAACiF,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACwB,MAAM,CAAC;MAC5E;IACF,KAAKjC,mBAAmB;MACtBsB,KAAK,CAACzD,iBAAiB,GAAG,KAAK;MAC/ByD,KAAK,CAACvD,eAAe,GAAGsD,MAAM,CAACO,KAAK;MACpC;IACF,KAAK3B,mBAAmB;MACtBqB,KAAK,CAACtD,iBAAiB,GAAG,IAAI;MAC9BsD,KAAK,CAACrD,cAAc,GAAG,KAAK;MAC5BqD,KAAK,CAACpD,eAAe,GAAG,IAAI;MAC5B;IACA,KAAKgC,mBAAmB;MACxB2B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,MAAM,CAACZ,IAAI,CAAC;MACnDoB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAER,KAAK,CAAC/E,SAAS,CAACyF,IAAI,CAAEP,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACwB,MAAM,CAAC,CAAC;MAC9E,MAAMF,IAAI,GAAGT,KAAK,CAAC/E,SAAS,CAACyF,IAAI,CAAEP,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACwB,MAAM,CAAC;MACrEF,IAAI,CAAChB,QAAQ,CAACY,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC;MAClCa,KAAK,CAACtD,iBAAiB,GAAG,KAAK;MAC/BsD,KAAK,CAACrD,cAAc,GAAG,IAAI;MAC7B;MACE;IAEF,KAAKkC,mBAAmB;MACtBmB,KAAK,CAACtD,iBAAiB,GAAG,KAAK;MAC/BsD,KAAK,CAACpD,eAAe,GAAGmD,MAAM,CAACO,KAAK;MACpC;IAEF;MACE;EAAM;AAEZ,CAAC,CAAC;AAEF,eAAeT,OAAO"},"metadata":{},"sourceType":"module"}