{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\n\nimport produce from '../util/produce';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  singlePost: null,\n  keywords: null,\n  newLookKeywords: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  uploadUpdateLookimageLoading: false,\n  uploadUpdateLookimageError: null,\n  uploadUpdateLookimageDone: false,\n  updateCommentRateLoading: false,\n  updateCommentRateError: null,\n  updateCommentRateDone: false,\n  checkDateLoading: false,\n  checkDateError: null,\n  checkDateDone: false,\n  searchKeywordLoading: false,\n  searchKeywordError: null,\n  searchKeywordDone: false\n};\nexport const CHECK_DATE_REQUEST = 'CHECK_DATE_REQUEST';\nexport const CHECK_DATE_SUCCESS = 'CHECK_DATE_SUCCESS';\nexport const CHECK_DATE_FAILURE = 'CHECK_DATE_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_NEW_POSTS_REQUEST = 'LOAD_NEW_POSTS_REQUEST';\nexport const LOAD_NEW_POSTS_SUCCESS = 'LOAD_NEW_POSTS_SUCCESS';\nexport const LOAD_NEW_POSTS_FAILURE = 'LOAD_NEW_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST = 'UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS = 'UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE = 'UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\nexport const SEARCH_KEYWORD_REQUEST = 'SEARCH_KEYWORD_REQUEST';\nexport const SEARCH_KEYWORD_SUCCESS = 'SEARCH_KEYWORD_SUCCESS';\nexport const SEARCH_KEYWORD_FAILURE = 'SEARCH_KEYWORD_FAILURE';\nexport const NEWLOOK_KEYWORD_REQUEST = 'NEWLOOK_KEYWORD_REQUEST';\nexport const NEWLOOK_KEYWORD_SUCCESS = 'NEWLOOK_KEYWORD_SUCCESS';\nexport const NEWLOOK_KEYWORD_FAILURE = 'NEWLOOK_KEYWORD_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n// export const addPost = (data) => ({\n//   type: ADD_POST_REQUEST,\n//   data,\n// });\n\n// export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n    case RETWEET_SUCCESS:\n      {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\n        break;\n      }\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetError = action.error;\n      break;\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = null;\n      break;\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        console.log(\"reducer image\", action.data);\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    // case LOAD_USER_POSTS_REQUEST:\n    case LOAD_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    // case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.hasMorePosts = draft.mainPosts.length === 10;\n      break;\n    // case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = null;\n      break;\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = true;\n      console.log(\"업데이트 완료 후 데이터: \", action.data);\n      draft.singlePost = action.data;\n      break;\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        draft.imagePaths = [];\n        break;\n      }\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    case REMOVE_COMMENT_REQUEST:\n      draft.removeCommentLoading = true;\n      draft.removeCommentDone = false;\n      draft.removeCommentError = null;\n    case REMOVE_COMMENT_SUCCESS:\n      draft.removeCommentLoading = false;\n      draft.removeCommentDone = true;\n      console.log(\"댓글 삭제 리듀서: \", action.data);\n      draft.singlePost.Comments = draft.singlePost.Comments.filter(v => v.id !== action.data.id);\n      break;\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\n      draft.uploadUpdateLookimageLoading = true;\n      draft.uploadUpdateLookimageError = null;\n      draft.uploadUpdateLookimageDone = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\n      draft.imagePaths = action.data;\n      draft.uploadUpdateLookimageDone = true;\n      draft.uploadUpdateLookimageLoading = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\n      draft.uploadUpdateLookimageLoading = false;\n      draft.uploadUpdateLookimageError = action.error;\n      break;\n    case UPDATE_COMMENT_RATE_REQUEST:\n      draft.updateCommentRateLoading = true;\n      draft.updateCommentRateError = null;\n      draft.updateCommentRateDone = false;\n      break;\n    case UPDATE_COMMENT_RATE_SUCCESS:\n      console.log(\"댓글 점수 수정 성공: \", action.data);\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateDone = true;\n      draft.singlePost.rateAverage = action.data.rateAverage;\n      break;\n    case UPDATE_COMMENT_RATE_FAILURE:\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateError = action.error;\n      break;\n    case CHECK_DATE_REQUEST:\n      draft.checkDateLoading = true;\n      draft.checkDateError = null;\n      draft.checkDateDone = false;\n      break;\n    case CHECK_DATE_SUCCESS:\n      draft.checkDateLoading = false;\n      draft.checkDateDone = true;\n      break;\n    case CHECK_DATE_FAILURE:\n      draft.checkDateLoading = false;\n      console.log(\"날짜 에러 확인\", action.data);\n      draft.checkDateError = action.data.message;\n      break;\n    case SEARCH_KEYWORD_REQUEST:\n    case NEWLOOK_KEYWORD_REQUEST:\n      draft.searchKeywordLoading = true;\n      draft.searchKeywordError = null;\n      draft.searchKeywordDone = false;\n      break;\n    case SEARCH_KEYWORD_SUCCESS:\n      draft.searchKeywordLoading = false;\n      draft.searchKeywordDone = true;\n      draft.keywords = action.data;\n      break;\n    case SEARCH_KEYWORD_FAILURE:\n    case NEWLOOK_KEYWORD_FAILURE:\n      draft.searchKeywordLoading = false;\n      draft.searchKeywordError = action.data;\n      break;\n    case NEWLOOK_KEYWORD_SUCCESS:\n      draft.newLookKeywords = action.data;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","singlePost","keywords","newLookKeywords","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","removeCommentLoading","removeCommentDone","removeCommentError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","uploadUpdateLookimageLoading","uploadUpdateLookimageError","uploadUpdateLookimageDone","updateCommentRateLoading","updateCommentRateError","updateCommentRateDone","checkDateLoading","checkDateError","checkDateDone","searchKeywordLoading","searchKeywordError","searchKeywordDone","CHECK_DATE_REQUEST","CHECK_DATE_SUCCESS","CHECK_DATE_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_NEW_POSTS_REQUEST","LOAD_NEW_POSTS_SUCCESS","LOAD_NEW_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","UPDATE_COMMENT_RATE_REQUEST","UPDATE_COMMENT_RATE_SUCCESS","UPDATE_COMMENT_RATE_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","UPLOAD_UPDATE_LOOK_IMAGE_REQUEST","UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS","UPLOAD_UPDATE_LOOK_IMAGE_FAILURE","SEARCH_KEYWORD_REQUEST","SEARCH_KEYWORD_SUCCESS","SEARCH_KEYWORD_FAILURE","NEWLOOK_KEYWORD_REQUEST","NEWLOOK_KEYWORD_SUCCESS","NEWLOOK_KEYWORD_FAILURE","REMOVE_IMAGE","dummyPost","data","id","content","User","nickname","Images","Comments","dummyComment","shortId","generate","reducer","state","action","draft","type","filter","v","i","unshift","error","console","log","post","Likers","push","UserId","concat","length","PostId","rateAverage","message"],"sources":["C:/Users/내컴/Desktop/fashionary/front/reducers/post.js"],"sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\n\r\nimport produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  singlePost: null,\r\n  keywords: null,\r\n  newLookKeywords: null,\r\n  hasMorePosts: true,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n  uploadUpdateLookimageLoading: false,\r\n  uploadUpdateLookimageError: null,\r\n  uploadUpdateLookimageDone: false,\r\n  updateCommentRateLoading: false,\r\n  updateCommentRateError: null,\r\n  updateCommentRateDone: false,\r\n  checkDateLoading: false,\r\n  checkDateError: null,\r\n  checkDateDone: false,\r\n  searchKeywordLoading: false,\r\n  searchKeywordError: null,\r\n  searchKeywordDone: false,\r\n};\r\n\r\n\r\nexport const CHECK_DATE_REQUEST = 'CHECK_DATE_REQUEST';\r\nexport const CHECK_DATE_SUCCESS = 'CHECK_DATE_SUCCESS';\r\nexport const CHECK_DATE_FAILURE = 'CHECK_DATE_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_NEW_POSTS_REQUEST = 'LOAD_NEW_POSTS_REQUEST';\r\nexport const LOAD_NEW_POSTS_SUCCESS = 'LOAD_NEW_POSTS_SUCCESS';\r\nexport const LOAD_NEW_POSTS_FAILURE = 'LOAD_NEW_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\r\n\r\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\r\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\r\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST ='UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS ='UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE ='UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\r\n\r\nexport const SEARCH_KEYWORD_REQUEST = 'SEARCH_KEYWORD_REQUEST';\r\nexport const SEARCH_KEYWORD_SUCCESS = 'SEARCH_KEYWORD_SUCCESS';\r\nexport const SEARCH_KEYWORD_FAILURE = 'SEARCH_KEYWORD_FAILURE';\r\n\r\nexport const NEWLOOK_KEYWORD_REQUEST = 'NEWLOOK_KEYWORD_REQUEST';\r\nexport const NEWLOOK_KEYWORD_SUCCESS = 'NEWLOOK_KEYWORD_SUCCESS';\r\nexport const NEWLOOK_KEYWORD_FAILURE = 'NEWLOOK_KEYWORD_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n// export const addPost = (data) => ({\r\n//   type: ADD_POST_REQUEST,\r\n//   data,\r\n// });\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n      case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:{\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\r\n      break;\r\n    }\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n      break;\r\n    \r\n      case UPLOAD_IMAGES_SUCCESS:{\r\n        console.log(\"reducer image\", action.data);\r\n        draft.imagePaths = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n      break;\r\n      // case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n      // case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = draft.mainPosts.length === 10;\r\n      break;\r\n      // case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n      case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.singlePost = action.data;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n      case UPDATE_POST_REQUEST:\r\n        draft.updatePostLoading = true;\r\n        draft.updatePostDone = false;\r\n        draft.updatePostError = null;\r\n      break;\r\n      case UPDATE_POST_SUCCESS:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostDone = true;\r\n        console.log(\"업데이트 완료 후 데이터: \", action.data);\r\n        draft.singlePost = action.data;\r\n      break;\r\n      case UPDATE_POST_FAILURE:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.singlePost;\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      draft.imagePaths = [];\r\n      break;\r\n      }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case REMOVE_COMMENT_REQUEST:\r\n      \r\n      draft.removeCommentLoading = true;\r\n      draft.removeCommentDone = false;\r\n      draft.removeCommentError = null;    \r\n    case REMOVE_COMMENT_SUCCESS:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentDone = true;\r\n      console.log(\"댓글 삭제 리듀서: \", action.data);\r\n      draft.singlePost.Comments = draft.singlePost.Comments.filter((v) => v.id !== action.data.id);\r\n      break;\r\n    case REMOVE_COMMENT_FAILURE:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentError = action.error;\r\n      break;\r\n\r\n    case  UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\r\n      draft.uploadUpdateLookimageLoading = true;\r\n      draft.uploadUpdateLookimageError = null;\r\n      draft.uploadUpdateLookimageDone = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\r\n      draft.imagePaths = action.data;\r\n      draft.uploadUpdateLookimageDone = true;\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      draft.uploadUpdateLookimageError = action.error;\r\n      break;\r\n\r\n      case UPDATE_COMMENT_RATE_REQUEST:\r\n        draft.updateCommentRateLoading = true;\r\n        draft.updateCommentRateError =  null;\r\n        draft.updateCommentRateDone = false;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_SUCCESS:\r\n        console.log(\"댓글 점수 수정 성공: \", action.data);\r\n        draft.updateCommentRateLoading = false; \r\n        draft.updateCommentRateDone = true;\r\n         draft.singlePost.rateAverage = action.data.rateAverage;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_FAILURE:\r\n        draft.updateCommentRateLoading = false;\r\n        draft.updateCommentRateError =  action.error;\r\n        break;\r\n\r\n      case CHECK_DATE_REQUEST:\r\n        draft.checkDateLoading= true;\r\n        draft.checkDateError =  null;\r\n        draft.checkDateDone = false;\r\n        break;\r\n      case  CHECK_DATE_SUCCESS:\r\n        draft.checkDateLoading= false;\r\n        draft.checkDateDone = true;\r\n        break;\r\n      case CHECK_DATE_FAILURE:\r\n        draft.checkDateLoading= false;\r\n        console.log(\"날짜 에러 확인\", action.data);\r\n        draft.checkDateError =  action.data.message;\r\n        break;\r\n        case SEARCH_KEYWORD_REQUEST:\r\n          case NEWLOOK_KEYWORD_REQUEST:\r\n          draft.searchKeywordLoading = true;\r\n          draft.searchKeywordError = null;\r\n          draft.searchKeywordDone = false;\r\n          break;\r\n        case SEARCH_KEYWORD_SUCCESS:\r\n          draft.searchKeywordLoading = false;\r\n          draft.searchKeywordDone = true;\r\n          draft.keywords = action.data;\r\n          break;\r\n\r\n        case SEARCH_KEYWORD_FAILURE:\r\n          case NEWLOOK_KEYWORD_FAILURE:\r\n          draft.searchKeywordLoading = false;\r\n          draft.searchKeywordError =  action.data\r\n          break;\r\n        \r\n          case NEWLOOK_KEYWORD_SUCCESS:\r\n            draft.newLookKeywords = action.data;\r\n      default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}