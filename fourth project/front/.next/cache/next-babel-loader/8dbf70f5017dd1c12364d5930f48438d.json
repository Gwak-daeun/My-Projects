{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\score.js\";\nvar __jsx = React.createElement;\nimport { Rate, Row, Upload } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React from \"react\";\nconst Score = ({\n  comments\n}) => {\n  console.log(\"개별댓글 점수\", comments[0].rate);\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 22\n    }\n  }, \"My rate is...\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Rate, {\n    style: {\n      fontSize: 50\n    },\n    disabled: true,\n    defaultValue: comment.rate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, \"My commnet is...\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    showCount: true,\n    maxLength: 250,\n    defaultValue: comment.content,\n    disabled: true,\n    style: {\n      height: 110,\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }, \"I recommend this!\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Upload, {\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: onPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  })));\n};\nexport default Score;","map":{"version":3,"names":["Rate","Row","Upload","TextArea","React","Score","comments","console","log","rate","map","comment","id","fontSize","content","height","resize","fileList","onPreview"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/score.js"],"sourcesContent":["import { Rate, Row, Upload } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport React from \"react\";\r\n\r\nconst Score = ({comments}) => {\r\n\r\n    console.log(\"개별댓글 점수\", comments[0].rate)\r\n\r\n    return(\r\n        <>\r\n        {/* {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <Rate style={{fontSize: 50}} disabled defaultValue={comment.rate} />\r\n            </li>\r\n        ))} */}\r\n\r\n\r\n\r\n                <Row><h2>My rate is...</h2></Row>\r\n               <Row>\r\n               {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <Rate style={{fontSize: 50}} disabled defaultValue={comment.rate} />\r\n            </li>\r\n             ))}\r\n                {/* <Rate style={{fontSize: 50}} onChange={handleRate} value={post.Comments.rate} /> */}\r\n                </Row>  \r\n              <br />\r\n              <Row><h2>My commnet is...</h2></Row>\r\n              \r\n              <Row>\r\n              {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    defaultValue={comment.content}\r\n                    disabled\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                    }}\r\n                />\r\n            </li>\r\n             ))}\r\n                \r\n                 {/* <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                        \r\n                    }}\r\n                    /> */}\r\n                </Row>\r\n                <br />\r\n                <Row><h2>I recommend this!</h2></Row>\r\n                {/* <Row><h3>아이템 추천은 2개까지 가능해요.</h3></Row> */}\r\n                <Row>\r\n               <Upload\r\n               listType=\"picture-card\"\r\n               fileList={fileList}\r\n               onPreview={onPreview}\r\n               >\r\n               </Upload>\r\n                </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Score;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,MAAM,QAAQ,MAAM;AACxC,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG,CAAC;EAACC;AAAQ,CAAC,KAAK;EAE1BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;EAExC,OACI,4BASQ,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAsB,CAAM,EAClC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACHH,QAAQ,CAACI,GAAG,CAACC,OAAO,IACxB;IAAI,GAAG,EAAEA,OAAO,CAACC,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChB,MAAC,IAAI;IAAC,KAAK,EAAE;MAACC,QAAQ,EAAE;IAAE,CAAE;IAAC,QAAQ;IAAC,YAAY,EAAEF,OAAO,CAACF,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEtE,CAAC,CAEO,EACR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAyB,CAAM,EAEpC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACHH,QAAQ,CAACI,GAAG,CAACC,OAAO,IACvB;IAAI,GAAG,EAAEA,OAAO,CAACC,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChB,MAAC,QAAQ;IACL,SAAS;IACT,SAAS,EAAE,GAAI;IACf,YAAY,EAAED,OAAO,CAACG,OAAQ;IAC9B,QAAQ;IACR,KAAK,EAAE;MACHC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE;IACZ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACJ,CAEJ,CAAC,CAaO,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBAA0B,CAAM,EAErC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,MAAM;IACP,QAAQ,EAAC,cAAc;IACvB,QAAQ,EAAEC,QAAS;IACnB,SAAS,EAAEC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEZ,CACF,CAEX;AAEX,CAAC;AAGD,eAAeb,KAAK"},"metadata":{},"sourceType":"module"}