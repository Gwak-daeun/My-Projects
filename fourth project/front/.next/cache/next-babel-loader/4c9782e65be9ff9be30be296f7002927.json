{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\n\nimport produce from '../util/produce';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  singlePost: null,\n  comments: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  uploadUpdateLookimageLoading: false,\n  uploadUpdateLookimageError: null,\n  uploadUpdateLookimageDone: false,\n  updateCommentRateLoading: false,\n  updateCommentRateError: null,\n  updateCommentRateDone: false\n};\n\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n//   id: shortId.generate(),\n//   User: {\n//     id: shortId.generate(),\n//     nickname: faker.name.findName(),\n//   },\n//   content: faker.lorem.paragraph(),\n//   Images: [{\n//     src: faker.image.image(),\n//   }],\n//   Comments: [{\n//     User: {\n//       id: shortId.generate(),\n//       nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.sentence(),\n//   }],\n// }));\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST = 'UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS = 'UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE = 'UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n// export const addPost = (data) => ({\n//   type: ADD_POST_REQUEST,\n//   data,\n// });\n\n// export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n    case RETWEET_SUCCESS:\n      {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\n        break;\n      }\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetError = action.error;\n      break;\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = null;\n      break;\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        console.log(\"reducer image\", action.data);\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    // case LOAD_USER_POSTS_REQUEST:\n    case LOAD_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    // case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.hasMorePosts = draft.mainPosts.length === 10;\n      break;\n    // case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = null;\n      break;\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = true;\n      console.log(\"업데이트 완료 후 데이터: \", action.data);\n      draft.singlePost = action.data;\n      break;\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        draft.imagePaths = [];\n        break;\n      }\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    case REMOVE_COMMENT_REQUEST:\n      draft.removeCommentLoading = true;\n      draft.removeCommentDone = false;\n      draft.removeCommentError = null;\n    case REMOVE_COMMENT_SUCCESS:\n      draft.removeCommentLoading = false;\n      draft.removeCommentDone = true;\n      console.log(\"댓글 삭제 리듀서: \", action.data);\n      draft.singlePost.Comments = draft.singlePost.Comments.filter(v => v.id !== action.data.id);\n      break;\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\n      draft.uploadUpdateLookimageLoading = true;\n      draft.uploadUpdateLookimageError = null;\n      draft.uploadUpdateLookimageDone = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\n      draft.imagePaths = action.data;\n      draft.uploadUpdateLookimageDone = true;\n      draft.uploadUpdateLookimageLoading = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\n      draft.uploadUpdateLookimageLoading = false;\n      draft.uploadUpdateLookimageError = action.error;\n      break;\n    case UPDATE_COMMENT_RATE_REQUEST:\n      draft.updateCommentRateLoading = true;\n      draft.updateCommentRateError = null;\n      draft.updateCommentRateDone = false;\n      break;\n    case UPDATE_COMMENT_RATE_SUCCESS:\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateDone = true;\n      draft.comments = action.data;\n      break;\n    case UPDATE_COMMENT_RATE_FAILURE:\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateError = action.error;\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","singlePost","comments","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","removeCommentLoading","removeCommentDone","removeCommentError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","uploadUpdateLookimageLoading","uploadUpdateLookimageError","uploadUpdateLookimageDone","updateCommentRateLoading","updateCommentRateError","updateCommentRateDone","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","UPDATE_COMMENT_RATE_REQUEST","UPDATE_COMMENT_RATE_SUCCESS","UPDATE_COMMENT_RATE_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","UPLOAD_UPDATE_LOOK_IMAGE_REQUEST","UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS","UPLOAD_UPDATE_LOOK_IMAGE_FAILURE","REMOVE_IMAGE","dummyPost","data","id","content","User","nickname","Images","Comments","dummyComment","shortId","generate","reducer","state","action","draft","type","filter","v","i","unshift","error","console","log","post","Likers","push","UserId","concat","length","PostId"],"sources":["C:/Users/내컴/Desktop/fashionary/front/reducers/post.js"],"sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\n\r\nimport produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  singlePost: null,\r\n  comments: null,\r\n  hasMorePosts: true,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n  uploadUpdateLookimageLoading: false,\r\n  uploadUpdateLookimageError: null,\r\n  uploadUpdateLookimageDone: false,\r\n  updateCommentRateLoading: false,\r\n  updateCommentRateError: null,\r\n  updateCommentRateDone: false,\r\n};\r\n\r\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n//   id: shortId.generate(),\r\n//   User: {\r\n//     id: shortId.generate(),\r\n//     nickname: faker.name.findName(),\r\n//   },\r\n//   content: faker.lorem.paragraph(),\r\n//   Images: [{\r\n//     src: faker.image.image(),\r\n//   }],\r\n//   Comments: [{\r\n//     User: {\r\n//       id: shortId.generate(),\r\n//       nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.sentence(),\r\n//   }],\r\n// }));\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\r\n\r\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\r\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\r\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST ='UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS ='UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\r\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE ='UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n// export const addPost = (data) => ({\r\n//   type: ADD_POST_REQUEST,\r\n//   data,\r\n// });\r\n\r\n// export const addComment = (data) => ({\r\n//   type: ADD_COMMENT_REQUEST,\r\n//   data,\r\n// });\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n      case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:{\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\r\n      break;\r\n    }\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n      break;\r\n    \r\n      case UPLOAD_IMAGES_SUCCESS:{\r\n        console.log(\"reducer image\", action.data);\r\n        draft.imagePaths = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS:{\r\n      const post = draft.singlePost;\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n      break;\r\n      // case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n      // case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = draft.mainPosts.length === 10;\r\n      break;\r\n      // case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n      case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.singlePost = action.data;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n      case UPDATE_POST_REQUEST:\r\n        draft.updatePostLoading = true;\r\n        draft.updatePostDone = false;\r\n        draft.updatePostError = null;\r\n      break;\r\n      case UPDATE_POST_SUCCESS:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostDone = true;\r\n        console.log(\"업데이트 완료 후 데이터: \", action.data);\r\n        draft.singlePost = action.data;\r\n      break;\r\n      case UPDATE_POST_FAILURE:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.singlePost;\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      draft.imagePaths = [];\r\n      break;\r\n      }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case REMOVE_COMMENT_REQUEST:\r\n      \r\n      draft.removeCommentLoading = true;\r\n      draft.removeCommentDone = false;\r\n      draft.removeCommentError = null;    \r\n    case REMOVE_COMMENT_SUCCESS:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentDone = true;\r\n      console.log(\"댓글 삭제 리듀서: \", action.data);\r\n      draft.singlePost.Comments = draft.singlePost.Comments.filter((v) => v.id !== action.data.id);\r\n      break;\r\n    case REMOVE_COMMENT_FAILURE:\r\n      draft.removeCommentLoading = false;\r\n      draft.removeCommentError = action.error;\r\n      break;\r\n\r\n    case  UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\r\n      draft.uploadUpdateLookimageLoading = true;\r\n      draft.uploadUpdateLookimageError = null;\r\n      draft.uploadUpdateLookimageDone = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\r\n      draft.imagePaths = action.data;\r\n      draft.uploadUpdateLookimageDone = true;\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      break;\r\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\r\n      draft.uploadUpdateLookimageLoading = false;\r\n      draft.uploadUpdateLookimageError = action.error;\r\n      break;\r\n\r\n      case UPDATE_COMMENT_RATE_REQUEST:\r\n        draft.updateCommentRateLoading = true;\r\n        draft.updateCommentRateError =  null;\r\n        draft.updateCommentRateDone = false;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_SUCCESS:\r\n        draft.updateCommentRateLoading = false; \r\n        draft.updateCommentRateDone = true;\r\n        draft.comments = action.data;\r\n        break;\r\n      case UPDATE_COMMENT_RATE_FAILURE:\r\n        draft.updateCommentRateLoading = false;\r\n        draft.updateCommentRateError =  action.error;\r\n        break;\r\n\r\n      default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"],"mappings":"AAAA;AACA;;AAEA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,IAAI;EACdC,YAAY,EAAE,IAAI;EAClBC,mBAAmB,EAAE,KAAK;EAC1BC,gBAAgB,EAAE,KAAK;EACvBC,iBAAiB,EAAE,IAAI;EACvBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,gBAAgB,EAAE,KAAK;EACvBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAClBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,oBAAoB,EAAE,KAAK;EAC3BC,iBAAiB,EAAE,KAAK;EACxBC,kBAAkB,EAAE,IAAI;EACxBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAClBC,4BAA4B,EAAE,KAAK;EACnCC,0BAA0B,EAAE,IAAI;EAChCC,yBAAyB,EAAE,KAAK;EAChCC,wBAAwB,EAAE,KAAK;EAC/BC,sBAAsB,EAAE,IAAI;EAC5BC,qBAAqB,EAAE;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAE5D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AAEpD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AAEtD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AAEpD,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAEhE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AAEtE,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAE9D,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AACxE,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AACxE,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AAExE,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAEhD,OAAO,MAAMC,gCAAgC,GAAE,kCAAkC;AACjF,OAAO,MAAMC,gCAAgC,GAAE,kCAAkC;AACjF,OAAO,MAAMC,gCAAgC,GAAE,kCAAkC;AAEjF,OAAO,MAAMC,YAAY,GAAG,cAAc;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,IAAI,KAAM;EAC3BC,EAAE,EAAED,IAAI,CAACC,EAAE;EACXC,OAAO,EAAEF,IAAI,CAACE,OAAO;EACrBC,IAAI,EAAE;IACJF,EAAE,EAAE,CAAC;IACLG,QAAQ,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAIP,IAAI,KAAM;EAC9BC,EAAE,EAAEO,OAAO,CAACC,QAAQ,EAAE;EACtBP,OAAO,EAAEF,IAAI;EACbG,IAAI,EAAE;IACJF,EAAE,EAAE,CAAC;IACLG,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AACF;AACA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGvG,YAAY,EAAEwG,MAAM,KAAKzG,OAAO,CAACwG,KAAK,EAAGE,KAAK,IAAK;EAC1E,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAKhB,YAAY;MACfe,KAAK,CAACvG,UAAU,GAAGuG,KAAK,CAACvG,UAAU,CAACyG,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,MAAM,CAACZ,IAAI,CAAC;MACvE;IACA,KAAKR,eAAe;MACpBqB,KAAK,CAACrE,cAAc,GAAG,IAAI;MAC3BqE,KAAK,CAACpE,WAAW,GAAG,KAAK;MACzBoE,KAAK,CAACnE,YAAY,GAAG,IAAI;MACzB;IACF,KAAK+C,eAAe;MAAC;QACnBoB,KAAK,CAACrE,cAAc,GAAG,KAAK;QAC5BqE,KAAK,CAACpE,WAAW,GAAG,IAAI;QACxBoE,KAAK,CAACxG,SAAS,CAAC6G,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC,CAAC,CAAC;QACtC;MACF;IACA,KAAKN,eAAe;MAClBmB,KAAK,CAACrE,cAAc,GAAG,KAAK;MAC5BqE,KAAK,CAACnE,YAAY,GAAGkE,MAAM,CAACO,KAAK;MACjC;IACF,KAAKlE,qBAAqB;MACxB4D,KAAK,CAACnG,mBAAmB,GAAG,IAAI;MAChCmG,KAAK,CAAClG,gBAAgB,GAAG,KAAK;MAC9BkG,KAAK,CAACjG,iBAAiB,GAAG,IAAI;MAC9B;IAEA,KAAKsC,qBAAqB;MAAC;QACzBkE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,MAAM,CAACZ,IAAI,CAAC;QACzCa,KAAK,CAACvG,UAAU,GAAGsG,MAAM,CAACZ,IAAI;QAC9Ba,KAAK,CAACnG,mBAAmB,GAAG,KAAK;QACjCmG,KAAK,CAAClG,gBAAgB,GAAG,IAAI;QAC7B;MACF;IACF,KAAKwC,qBAAqB;MACxB0D,KAAK,CAACnG,mBAAmB,GAAG,KAAK;MACjCmG,KAAK,CAACjG,iBAAiB,GAAGgG,MAAM,CAACO,KAAK;MACtC;IAEF,KAAK/D,iBAAiB;MACpByD,KAAK,CAAChG,eAAe,GAAG,IAAI;MAC5BgG,KAAK,CAAC/F,YAAY,GAAG,KAAK;MAC1B+F,KAAK,CAAC9F,aAAa,GAAG,IAAI;MAC1B;IACF,KAAKsC,iBAAiB;MAAC;QACrB,MAAMiE,IAAI,GAAGT,KAAK,CAACtG,UAAU;QAC7B+G,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC;UAACvB,EAAE,EAAEW,MAAM,CAACZ,IAAI,CAACyB;QAAM,CAAC,CAAC;QAC1CZ,KAAK,CAAChG,eAAe,GAAG,KAAK;QAC7BgG,KAAK,CAAC/F,YAAY,GAAG,IAAI;QACzB;MACF;IACA,KAAKwC,iBAAiB;MACpBuD,KAAK,CAAChG,eAAe,GAAG,KAAK;MAC7BgG,KAAK,CAAC9F,aAAa,GAAG6F,MAAM,CAACO,KAAK;MAClC;IACF,KAAK5D,mBAAmB;MACtBsD,KAAK,CAAC7F,iBAAiB,GAAG,IAAI;MAC9B6F,KAAK,CAAC5F,cAAc,GAAG,KAAK;MAC5B4F,KAAK,CAAC3F,eAAe,GAAG,IAAI;MAC5B;IACF,KAAKsC,mBAAmB;MAAC;QACvB,MAAM8D,IAAI,GAAGT,KAAK,CAACtG,UAAU;QAC7B+G,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM,CAACR,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACyB,MAAM,CAAC;QACpEZ,KAAK,CAAC7F,iBAAiB,GAAG,KAAK;QAC/B6F,KAAK,CAAC5F,cAAc,GAAG,IAAI;QAC3B;MACF;IACA,KAAKwC,mBAAmB;MACtBoD,KAAK,CAAC7F,iBAAiB,GAAG,KAAK;MAC/B6F,KAAK,CAAC3F,eAAe,GAAG0F,MAAM,CAACO,KAAK;MACpC;IACA;IACE,KAAKzD,kBAAkB;IACvB,KAAKS,0BAA0B;MACjC0C,KAAK,CAAC1F,gBAAgB,GAAG,IAAI;MAC7B0F,KAAK,CAACzF,aAAa,GAAG,KAAK;MAC3ByF,KAAK,CAACxF,cAAc,GAAG,IAAI;MAC3B;IACA;IACE,KAAK+C,0BAA0B;IAC/B,KAAKT,kBAAkB;MACzBkD,KAAK,CAAC1F,gBAAgB,GAAG,KAAK;MAC9B0F,KAAK,CAACzF,aAAa,GAAG,IAAI;MAC1ByF,KAAK,CAACxG,SAAS,GAAGwG,KAAK,CAACxG,SAAS,CAACqH,MAAM,CAACd,MAAM,CAACZ,IAAI,CAAC;MACrDa,KAAK,CAACpG,YAAY,GAAGoG,KAAK,CAACxG,SAAS,CAACsH,MAAM,KAAK,EAAE;MAClD;IACA;IACE,KAAKtD,0BAA0B;IAC/B,KAAKT,kBAAkB;MACzBiD,KAAK,CAAC1F,gBAAgB,GAAG,KAAK;MAC9B0F,KAAK,CAACxF,cAAc,GAAGuF,MAAM,CAACO,KAAK;MACnC;IACA,KAAKtD,iBAAiB;MACtBgD,KAAK,CAACvF,eAAe,GAAG,IAAI;MAC5BuF,KAAK,CAACtF,YAAY,GAAG,KAAK;MAC1BsF,KAAK,CAACrF,aAAa,GAAG,IAAI;MAC1B;IACF,KAAKsC,iBAAiB;MACpB+C,KAAK,CAACvF,eAAe,GAAG,KAAK;MAC7BuF,KAAK,CAACtF,YAAY,GAAG,IAAI;MACzBsF,KAAK,CAACtG,UAAU,GAAGqG,MAAM,CAACZ,IAAI;MAC9B;IACF,KAAKjC,iBAAiB;MACpB8C,KAAK,CAACvF,eAAe,GAAG,KAAK;MAC7BuF,KAAK,CAACrF,aAAa,GAAGoF,MAAM,CAACO,KAAK;MAClC;IACF,KAAK7C,gBAAgB;MACnBuC,KAAK,CAACpF,cAAc,GAAG,IAAI;MAC3BoF,KAAK,CAACnF,WAAW,GAAG,KAAK;MACzBmF,KAAK,CAAClF,YAAY,GAAG,IAAI;MACzB;IACF,KAAK4C,gBAAgB;MACnBsC,KAAK,CAACpF,cAAc,GAAG,KAAK;MAC5BoF,KAAK,CAACnF,WAAW,GAAG,IAAI;MACxBmF,KAAK,CAACxG,SAAS,CAAC6G,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC;MACpCa,KAAK,CAACvG,UAAU,GAAG,EAAE,CAAC,CAAC;MACvB;IACF,KAAKkE,gBAAgB;MACnBqC,KAAK,CAACpF,cAAc,GAAG,KAAK;MAC5BoF,KAAK,CAAClF,YAAY,GAAGiF,MAAM,CAACO,KAAK;MACjC;IACA,KAAK1C,mBAAmB;MACtBoC,KAAK,CAACjF,iBAAiB,GAAG,IAAI;MAC9BiF,KAAK,CAAChF,cAAc,GAAG,KAAK;MAC5BgF,KAAK,CAAC/E,eAAe,GAAG,IAAI;MAC9B;IACA,KAAK4C,mBAAmB;MACtBmC,KAAK,CAACjF,iBAAiB,GAAG,KAAK;MAC/BiF,KAAK,CAAChF,cAAc,GAAG,IAAI;MAC3BuF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,MAAM,CAACZ,IAAI,CAAC;MAC3Ca,KAAK,CAACtG,UAAU,GAAGqG,MAAM,CAACZ,IAAI;MAChC;IACA,KAAKrB,mBAAmB;MACtBkC,KAAK,CAACjF,iBAAiB,GAAG,KAAK;MAC/BiF,KAAK,CAAC/E,eAAe,GAAG8E,MAAM,CAACO,KAAK;MACtC;IACF,KAAKvC,mBAAmB;MACtBiC,KAAK,CAAC9E,iBAAiB,GAAG,IAAI;MAC9B8E,KAAK,CAAC7E,cAAc,GAAG,KAAK;MAC5B6E,KAAK,CAAC5E,eAAe,GAAG,IAAI;MAC5B;IACF,KAAK4C,mBAAmB;MACtBgC,KAAK,CAAC9E,iBAAiB,GAAG,KAAK;MAC/B8E,KAAK,CAAC7E,cAAc,GAAG,IAAI;MAC3B6E,KAAK,CAACxG,SAAS,GAAGwG,KAAK,CAACxG,SAAS,CAAC0G,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAAC4B,MAAM,CAAC;MAC5E;IACF,KAAK9C,mBAAmB;MACtB+B,KAAK,CAAC9E,iBAAiB,GAAG,KAAK;MAC/B8E,KAAK,CAAC5E,eAAe,GAAG2E,MAAM,CAACO,KAAK;MACpC;IACF,KAAKpC,mBAAmB;MACtB8B,KAAK,CAACxE,iBAAiB,GAAG,IAAI;MAC9BwE,KAAK,CAACvE,cAAc,GAAG,KAAK;MAC5BuE,KAAK,CAACtE,eAAe,GAAG,IAAI;MAC5B;IACA,KAAKyC,mBAAmB;MAAE;QAC1B,MAAMsC,IAAI,GAAGT,KAAK,CAACtG,UAAU;QAC7B+G,IAAI,CAAChB,QAAQ,CAACY,OAAO,CAACN,MAAM,CAACZ,IAAI,CAAC;QAClCa,KAAK,CAACxE,iBAAiB,GAAG,KAAK;QAC/BwE,KAAK,CAACvE,cAAc,GAAG,IAAI;QAC3BuE,KAAK,CAACvG,UAAU,GAAG,EAAE;QACrB;MACA;IACF,KAAK2E,mBAAmB;MACtB4B,KAAK,CAACxE,iBAAiB,GAAG,KAAK;MAC/BwE,KAAK,CAACtE,eAAe,GAAGqE,MAAM,CAACO,KAAK;MACpC;IACF,KAAKjC,sBAAsB;MAEzB2B,KAAK,CAAC3E,oBAAoB,GAAG,IAAI;MACjC2E,KAAK,CAAC1E,iBAAiB,GAAG,KAAK;MAC/B0E,KAAK,CAACzE,kBAAkB,GAAG,IAAI;IACjC,KAAK+C,sBAAsB;MACzB0B,KAAK,CAAC3E,oBAAoB,GAAG,KAAK;MAClC2E,KAAK,CAAC1E,iBAAiB,GAAG,IAAI;MAC9BiF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,MAAM,CAACZ,IAAI,CAAC;MACvCa,KAAK,CAACtG,UAAU,CAAC+F,QAAQ,GAAGO,KAAK,CAACtG,UAAU,CAAC+F,QAAQ,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,MAAM,CAACZ,IAAI,CAACC,EAAE,CAAC;MAC5F;IACF,KAAKb,sBAAsB;MACzByB,KAAK,CAAC3E,oBAAoB,GAAG,KAAK;MAClC2E,KAAK,CAACzE,kBAAkB,GAAGwE,MAAM,CAACO,KAAK;MACvC;IAEF,KAAMxB,gCAAgC;MACpCkB,KAAK,CAAClE,4BAA4B,GAAG,IAAI;MACzCkE,KAAK,CAACjE,0BAA0B,GAAG,IAAI;MACvCiE,KAAK,CAAChE,yBAAyB,GAAG,KAAK;MACvC;IACF,KAAK+C,gCAAgC;MACnCiB,KAAK,CAACvG,UAAU,GAAGsG,MAAM,CAACZ,IAAI;MAC9Ba,KAAK,CAAChE,yBAAyB,GAAG,IAAI;MACtCgE,KAAK,CAAClE,4BAA4B,GAAG,KAAK;MAC1C;IACF,KAAKkD,gCAAgC;MACnCgB,KAAK,CAAClE,4BAA4B,GAAG,KAAK;MAC1CkE,KAAK,CAACjE,0BAA0B,GAAGgE,MAAM,CAACO,KAAK;MAC/C;IAEA,KAAK9B,2BAA2B;MAC9BwB,KAAK,CAAC/D,wBAAwB,GAAG,IAAI;MACrC+D,KAAK,CAAC9D,sBAAsB,GAAI,IAAI;MACpC8D,KAAK,CAAC7D,qBAAqB,GAAG,KAAK;MACnC;IACF,KAAKsC,2BAA2B;MAC9BuB,KAAK,CAAC/D,wBAAwB,GAAG,KAAK;MACtC+D,KAAK,CAAC7D,qBAAqB,GAAG,IAAI;MAClC6D,KAAK,CAACrG,QAAQ,GAAGoG,MAAM,CAACZ,IAAI;MAC5B;IACF,KAAKT,2BAA2B;MAC9BsB,KAAK,CAAC/D,wBAAwB,GAAG,KAAK;MACtC+D,KAAK,CAAC9D,sBAAsB,GAAI6D,MAAM,CAACO,KAAK;MAC5C;IAEF;MACA;EAAM;AAEZ,CAAC,CAAC;AAEF,eAAeT,OAAO"},"metadata":{},"sourceType":"module"}