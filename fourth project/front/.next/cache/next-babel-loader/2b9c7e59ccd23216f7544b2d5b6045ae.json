{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\score.js\";\nvar __jsx = React.createElement;\nimport { Rate, Row } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React from \"react\";\nvar Score = function Score(_ref) {\n  var comments = _ref.comments;\n  console.log(\"개별댓글 점수\", comments[0].rate);\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 22\n    }\n  }, \"My rate is...\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }, comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(Rate, {\n      style: {\n        fontSize: 50\n      },\n      disabled: true,\n      defaultValue: comment.rate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, \"My commnet is...\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(TextArea, {\n      showCount: true,\n      maxLength: 250,\n      defaultValue: comment.content,\n      disabled: true,\n      style: {\n        height: 110,\n        resize: 'none'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }, \"I recommend this!\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Upload, {\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: onPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  })));\n};\n_c = Score;\nexport default Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["Rate","Row","TextArea","React","Score","comments","console","log","rate","map","comment","id","fontSize","content","height","resize","fileList","onPreview"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/score.js"],"sourcesContent":["import { Rate, Row } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport React from \"react\";\r\n\r\nconst Score = ({comments}) => {\r\n\r\n    console.log(\"개별댓글 점수\", comments[0].rate)\r\n\r\n    return(\r\n        <>\r\n        {/* {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <Rate style={{fontSize: 50}} disabled defaultValue={comment.rate} />\r\n            </li>\r\n        ))} */}\r\n\r\n\r\n\r\n                <Row><h2>My rate is...</h2></Row>\r\n               <Row>\r\n               {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <Rate style={{fontSize: 50}} disabled defaultValue={comment.rate} />\r\n            </li>\r\n             ))}\r\n                {/* <Rate style={{fontSize: 50}} onChange={handleRate} value={post.Comments.rate} /> */}\r\n                </Row>  \r\n              <br />\r\n              <Row><h2>My commnet is...</h2></Row>\r\n              \r\n              <Row>\r\n              {comments.map(comment => (\r\n            <li key={comment.id}>\r\n                <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    defaultValue={comment.content}\r\n                    disabled\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                    }}\r\n                />\r\n            </li>\r\n             ))}\r\n                \r\n                 {/* <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                        \r\n                    }}\r\n                    /> */}\r\n                </Row>\r\n                <br />\r\n                <Row><h2>I recommend this!</h2></Row>\r\n                {/* <Row><h3>아이템 추천은 2개까지 가능해요.</h3></Row> */}\r\n                <Row>\r\n               <Upload\r\n               listType=\"picture-card\"\r\n               fileList={fileList}\r\n               onPreview={onPreview}\r\n               >\r\n               </Upload>\r\n                </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Score;\r\n"],"mappings":";;;AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,MAAM;AAChC,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAmB;EAAA,IAAdC,QAAQ,QAARA,QAAQ;EAEpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;EAExC,OACI,4BASQ,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAsB,CAAM,EAClC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACHH,QAAQ,CAACI,GAAG,CAAC,UAAAC,OAAO;IAAA,OACxB;MAAI,GAAG,EAAEA,OAAO,CAACC,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChB,MAAC,IAAI;MAAC,KAAK,EAAE;QAACC,QAAQ,EAAE;MAAE,CAAE;MAAC,QAAQ;MAAC,YAAY,EAAEF,OAAO,CAACF,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACnE;EAAA,CACH,CAAC,CAEO,EACR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAyB,CAAM,EAEpC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACHH,QAAQ,CAACI,GAAG,CAAC,UAAAC,OAAO;IAAA,OACvB;MAAI,GAAG,EAAEA,OAAO,CAACC,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChB,MAAC,QAAQ;MACL,SAAS;MACT,SAAS,EAAE,GAAI;MACf,YAAY,EAAED,OAAO,CAACG,OAAQ;MAC9B,QAAQ;MACR,KAAK,EAAE;QACHC,MAAM,EAAE,GAAG;QACXC,MAAM,EAAE;MACZ,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACJ,CACD;EAAA,CACH,CAAC,CAaO,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBAA0B,CAAM,EAErC,MAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,MAAM;IACP,QAAQ,EAAC,cAAc;IACvB,QAAQ,EAAEC,QAAS;IACnB,SAAS,EAAEC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEZ,CACF,CAEX;AAEX,CAAC;AAAA,KApEKb,KAAK;AAuEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}