{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport Login from './login';\nimport Profile from './profile';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainposts\n  } = useSelector(state => state.post);\n  const {\n    data,\n    error\n  } = useSWR(`http://localhost:3065/posts/${me.id}/allLooks`, fetcher);\n\n  // useEffect(() => {\n  //     // dispatch({\n  //     //     type: LOAD_POSTS_REQUEST,\n\n  //     // });\n  //     dispatch({\n  //         type: LOAD_MY_INFO_REQUEST\n  //        });\n\n  // }, [LOAD_MY_INFO_REQUEST]);\n\n  console.log(\":::::::me:::::\" + JSON.stringify(me));\n  // console.log(\":::::::mainPosts::::::\" + mainposts);\n  console.log(\"::::::data::::::\" + JSON.stringify(data));\n\n  // if(error){\n  //     console.error(error);\n  //     return window.alert('게시글 로딩 중 에러 발생');\n  // }\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, me ? __jsx(Profile, {\n    post: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }) : __jsx(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //context console.log 찍어보기\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = ''; //쿠키 요청이 없을 땐 쿠키를 보내지 않는다.(이렇게 안하면 쿠키가 공유되어 보안에 문제가 생김)\n  if (context.req && cookie) {\n    //쿠키를 담아 요청을 보낼 때만 쿠키를 브라우저로 보내주고\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n\n  // context.store.dispatch({\n  //     type: LOAD_POSTS_REQUEST,\n\n  // });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Login","Profile","wrapper","axios","END","useSWR","fetcher","url","get","withCredentials","then","result","data","Home","dispatch","me","state","user","mainposts","post","error","id","console","log","JSON","stringify","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"sources":["C:/Users/내컴/Desktop/fashionary/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport Login from './login';\r\nimport Profile from './profile';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url, {withCredentials: true}).then((result) => result.data);\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {me} = useSelector((state) => state.user);\r\n    const {mainposts} = useSelector((state) => state.post);\r\n\r\n    const {data, error} = useSWR(`http://localhost:3065/posts/${me.id}/allLooks`, fetcher);\r\n\r\n    // useEffect(() => {\r\n    //     // dispatch({\r\n    //     //     type: LOAD_POSTS_REQUEST,\r\n           \r\n    //     // });\r\n    //     dispatch({\r\n    //         type: LOAD_MY_INFO_REQUEST\r\n    //        });\r\n       \r\n    // }, [LOAD_MY_INFO_REQUEST]);\r\n\r\n    console.log(\":::::::me:::::\" + JSON.stringify(me));\r\n    // console.log(\":::::::mainPosts::::::\" + mainposts);\r\n    console.log(\"::::::data::::::\" + JSON.stringify(data));\r\n\r\n    // if(error){\r\n    //     console.error(error);\r\n    //     return window.alert('게시글 로딩 중 에러 발생');\r\n    // }\r\n    \r\nreturn (\r\n    <AppLayout>\r\n        {me ? <Profile post={data} /> : <Login /> }\r\n    </AppLayout>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async(context) => { //context console.log 찍어보기\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = ''; //쿠키 요청이 없을 땐 쿠키를 보내지 않는다.(이렇게 안하면 쿠키가 공유되어 보안에 문제가 생김)\r\n    if(context.req && cookie){ //쿠키를 담아 요청을 보낼 때만 쿠키를 브라우저로 보내주고\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n   context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST\r\n    });\r\n   \r\n    // context.store.dispatch({\r\n    //     type: LOAD_POSTS_REQUEST,\r\n        \r\n    // });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n    \r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,YAAY;AAChC,OAAOC,MAAM,MAAM,KAAK;AAExB,MAAMC,OAAO,GAAIC,GAAG,IAAKJ,KAAK,CAACK,GAAG,CAACD,GAAG,EAAE;EAACE,eAAe,EAAE;AAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC;AAE9F,MAAMC,IAAI,GAAG,MAAM;EAEf,MAAMC,QAAQ,GAAGnB,WAAW,EAAE;EAE9B,MAAM;IAACoB;EAAE,CAAC,GAAGnB,WAAW,CAAEoB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC/C,MAAM;IAACC;EAAS,CAAC,GAAGtB,WAAW,CAAEoB,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAEtD,MAAM;IAACP,IAAI;IAAEQ;EAAK,CAAC,GAAGf,MAAM,CAAE,+BAA8BU,EAAE,CAACM,EAAG,WAAU,EAAEf,OAAO,CAAC;;EAEtF;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEAgB,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGC,IAAI,CAACC,SAAS,CAACV,EAAE,CAAC,CAAC;EAClD;EACAO,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;;EAEtD;EACA;EACA;EACA;;EAEJ,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACLG,EAAE,GAAG,MAAC,OAAO;IAAC,IAAI,EAAEH,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAAG,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjC;AAEhB,CAAC;AAED,OAAO,MAAMc,kBAAkB,GAAGxB,OAAO,CAACwB,kBAAkB,CAAC,MAAMC,OAAO,IAAK;EAAE;EAC7E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;EAC5DzB,KAAK,CAAC4B,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAG,EAAE,CAAC,CAAC;EACpC,IAAGL,OAAO,CAACE,GAAG,IAAID,MAAM,EAAC;IAAE;IACvBzB,KAAK,CAAC4B,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM;EAC1C;EACDD,OAAO,CAACM,KAAK,CAACnB,QAAQ,CAAC;IAClBoB,IAAI,EAAEnC;EACV,CAAC,CAAC;;EAEF;EACA;;EAEA;EACA4B,OAAO,CAACM,KAAK,CAACnB,QAAQ,CAACV,GAAG,CAAC;EAC3B,MAAMuB,OAAO,CAACM,KAAK,CAACE,QAAQ,CAACC,SAAS,EAAE;AAC5C,CAAC,CAAC;AAGF,eAAevB,IAAI"},"metadata":{},"sourceType":"module"}