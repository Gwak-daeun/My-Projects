{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\comments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CaretLeftOutlined, CaretRightOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, Form, Row } from \"antd\";\nimport { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Score from \"./score\";\nimport styled from \"styled-components\";\nimport { REMOVE_COMMENT_REQUEST } from \"../reducers/post\";\nconst OneComments = styled.div.withConfig({\n  displayName: \"comments__OneComments\",\n  componentId: \"sc-8a0us7-0\"\n})([\".card1{width:390px;height:665px;margin-left:720px;border-color:#F0F0F0;}.div1{margin-left:70px;}.icon1{font-size:30px;}.button1{margin-left:210px;margin-top:595px;position:absolute;}\"]);\nconst Comments = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: postsPerPage\n  } = useState(1);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: value,\n    1: setValue\n  } = useState({});\n\n  // console.log(\"댓글: \", post.Comments);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentComments = post.Comments.slice(indexOfFirstPost, indexOfLastPost);\n  const pageNumbers = [];\n  console.log(\"total opinions \" + post.Comments.length);\n  console.log(\"postsPerPage \" + postsPerPage);\n  for (let i = 1; i <= Math.ceil(post.Comments.length / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  const handleRate = value => {\n    setValue(value);\n    console.log(\"점수:::\" + value);\n  };\n\n  //댓글 다음 페이지로 이동\n  const upClick = () => {\n    if (currentPage < pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      alert(\"마지막 댓글이에요.\");\n    }\n    ;\n  };\n\n  //댓글 이전 페이지로 이동\n  const downClick = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    } else {\n      alert(\"가장 최신 댓글이에요.\");\n    }\n    ;\n  };\n  const onRemoveComment = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    const formData = new FormData();\n    formData.append('PostId', singlePost.id);\n    formData.append('commentId', currentComments[0].id);\n    return dispatch({\n      type: REMOVE_COMMENT_REQUEST,\n      data: formData\n    }, window.location.reload());\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(OneComments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    className: \"card1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, id && currentComments[0].UserId === id ? __jsx(OneComments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    type: \"danger\",\n    className: \"button1\",\n    onClick: onRemoveComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"\\uB313\\uAE00 \\uC0AD\\uC81C\")) : null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"Comment\"), __jsx(\"div\", {\n    className: \"div1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, __jsx(CaretLeftOutlined, {\n    className: \"icon1\",\n    onClick: downClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }), __jsx(CaretRightOutlined, {\n    className: \"icon1\",\n    onClick: upClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 27\n    }\n  })), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, \" \", currentPage, \" / \", post.Comments.length, \" \"))), __jsx(Score, {\n    comments: currentComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  })))));\n};\nexport default Comments;","map":{"version":3,"names":["CaretLeftOutlined","CaretRightOutlined","Button","Card","Col","Form","Row","useCallback","useState","useDispatch","useSelector","Score","styled","REMOVE_COMMENT_REQUEST","OneComments","div","Comments","post","dispatch","fileList","setFileList","currentPage","setCurrentPage","postsPerPage","id","state","user","me","value","setValue","indexOfLastPost","indexOfFirstPost","currentComments","slice","pageNumbers","console","log","length","i","Math","ceil","push","handleRate","upClick","alert","downClick","onRemoveComment","formData","FormData","append","singlePost","type","data","window","location","reload","UserId"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/comments.js"],"sourcesContent":["import { CaretLeftOutlined, CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Col, Form, Row } from \"antd\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Score from \"./score\";\r\nimport styled from \"styled-components\";\r\nimport { REMOVE_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst OneComments = styled.div`\r\n  .card1{\r\n    width: 390px;\r\n    height: 665px;\r\n    margin-left: 720px;\r\n    border-color: #F0F0F0;\r\n  }\r\n  .div1{\r\n    margin-left: 70px;\r\n  }\r\n  .icon1{\r\n    font-size: 30px;\r\n  }\r\n  .button1{\r\n    margin-left: 210px;\r\n    margin-top: 595px;\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\n\r\nconst Comments = ({post}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(1);\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n\r\n    const [value, setValue] = useState({});\r\n\r\n    // console.log(\"댓글: \", post.Comments);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentComments = post.Comments.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const pageNumbers = [];\r\n\r\n    console.log(\"total opinions \" + post.Comments.length);\r\n    console.log(\"postsPerPage \" + postsPerPage);\r\n\r\n    for (let i = 1; i <= Math.ceil(post.Comments.length / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n        }\r\n\r\n    const handleRate = (value) => {\r\n      setValue(value);\r\n      console.log(\"점수:::\" + value);\r\n    };\r\n\r\n        //댓글 다음 페이지로 이동\r\n        const upClick = () => {\r\n            if(currentPage < pageNumbers.length){\r\n              setCurrentPage(currentPage + 1);\r\n            } else {\r\n              alert(\"마지막 댓글이에요.\");\r\n            };\r\n          };\r\n      \r\n          //댓글 이전 페이지로 이동\r\n          const downClick = () => {\r\n            if(currentPage > 1){\r\n              setCurrentPage(currentPage - 1);\r\n            } else {\r\n              alert(\"가장 최신 댓글이에요.\");\r\n            };\r\n          };\r\n\r\n      const onRemoveComment = useCallback(() => {\r\n        if(!id){\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n  \r\n        const formData = new FormData();\r\n  \r\n        formData.append('PostId', singlePost.id);\r\n        formData.append('commentId', currentComments[0].id);\r\n  \r\n  \r\n        return dispatch({\r\n            type: REMOVE_COMMENT_REQUEST,\r\n            data: formData\r\n        }, window.location.reload()\r\n        );\r\n    }, [id]);\r\n\r\n\r\n    return(\r\n        <div>\r\n          <OneComments>\r\n            <Form encType=\"multipart/form-data\" >\r\n              <Card className=\"card1\">\r\n                  <Col>\r\n                  {\r\n                id && currentComments[0].UserId === id\r\n                ?\r\n                (\r\n                  <OneComments>\r\n                  <Button type=\"danger\" className=\"button1\" onClick={onRemoveComment} >댓글 삭제</Button>\r\n                  </OneComments>\r\n                )\r\n                :\r\n                null\r\n                }\r\n                      <Row>\r\n                      <h2>Comment</h2>\r\n                      <div className=\"div1\" >\r\n                          <CaretLeftOutlined className=\"icon1\" onClick={downClick} />\r\n                          <CaretRightOutlined className=\"icon1\" onClick={upClick} /> \r\n                      </div>\r\n                      <h3 > {currentPage} / {post.Comments.length} </h3> \r\n                      \r\n                      </Row>\r\n                  </Col>\r\n                  \r\n                  <Score comments={currentComments} />\r\n                  \r\n              </Card>\r\n            </Form>\r\n          </OneComments>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module"}