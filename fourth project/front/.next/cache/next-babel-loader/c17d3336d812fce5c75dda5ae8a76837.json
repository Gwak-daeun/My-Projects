{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) //데브툴 연결 안한거\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //데브툴 연결 한거\n\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true //디버그를 트루로 두면 리덕스에 대해 좀 더 자세한 설명이 나와서 이렇게 하느걸 추천\n});\n\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","reducer","rootSaga","composeWithDevTools","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","type","data","wrapper","debug"],"sources":["C:/Users/내컴/Desktop/fashionary/front/store/configureStore.js"],"sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport  createSagaMiddleware  from 'redux-saga';\r\n\r\nconst loggerMiddleware = ({dispatch, getState}) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    \r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares)) //데브툴 연결 안한거\r\n    : composeWithDevTools(applyMiddleware(...middlewares)) //데브툴 연결 한거\r\n   \r\n    const store = createStore(reducer, enhancer);\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    \r\n    store.dispatch({\r\n        type: 'CHANGE_NICKNAME',\r\n        data: 'boogicho',\r\n    });\r\n    \r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug: process.env.NODE_ENV === 'development', //디버그를 트루로 두면 리덕스에 대해 좀 더 자세한 설명이 나와서 이렇게 하느걸 추천\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,oBAAoB;AAChD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAQC,oBAAoB,MAAO,YAAY;AAE/C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB;EAAA,IAAKC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;EAAA,OAAM,UAACC,IAAI;IAAA,OAAK,UAACC,MAAM,EAAK;MACrEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;EAAA;AAAA;AAED,IAAMG,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAEzB,IAAMC,cAAc,GAAGT,oBAAoB,EAAE;EAE7C,IAAMU,WAAW,GAAG,CAACD,cAAc,EAAER,gBAAgB,CAAC;EAEtD,IAAMU,QAAQ,GAAG,QACfhB,OAAO,CAACD,eAAe,eAAIgB,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCX,mBAAmB,CAACL,eAAe,eAAIgB,WAAW,CAAC,CAAC,EAAC;;EAEvD,IAAME,KAAK,GAAGhB,WAAW,CAACC,OAAO,EAAEc,QAAQ,CAAC;EAE5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAAChB,QAAQ,CAAC;EAE7Cc,KAAK,CAACV,QAAQ,CAAC;IACXa,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,OAAOJ,KAAK;AAChB,CAAC;AAED,IAAMK,OAAO,GAAGxB,aAAa,CAACe,cAAc,EAAC;EACzCU,KAAK,MAAwC,CAAE;AACnD,CAAC,CAAC;;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}