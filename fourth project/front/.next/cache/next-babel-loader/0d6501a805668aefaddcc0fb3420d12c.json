{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\pages\\\\post\\\\allPosts.js\";\nvar __jsx = React.createElement;\nimport { Card, List } from \"antd\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { END } from \"redux-saga\";\nimport { LOAD_POSTS_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nconst AllPosts = ({\n  post\n}) => {\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  console.log(\"포스트\", mainPosts);\n  return __jsx(React.Fragment, null, __jsx(List, {\n    grid: {\n      gutter: 16,\n      column: 4\n    },\n    dataSource: mainPosts,\n    renderItem: item => __jsx(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      title: __jsx(Link, {\n        href: `http://localhost:3000/post/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }\n      }, item.lookName),\n      cover: __jsx(\"img\", {\n        style: {\n          height: 550\n        },\n        alt: \"example\",\n        src: `http://localhost:3065/${item.Images[0].src}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default AllPosts;","map":{"version":3,"names":["Card","List","axios","React","useSelector","END","LOAD_POSTS_REQUEST","wrapper","AllPosts","post","mainPosts","state","console","log","gutter","column","item","id","lookName","height","Images","src","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"sources":["C:/Users/내컴/Desktop/fashionary/front/pages/post/allPosts.js"],"sourcesContent":["import { Card, List } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { END } from \"redux-saga\";\r\nimport { LOAD_POSTS_REQUEST } from \"../../reducers/post\";\r\nimport wrapper from \"../../store/configureStore\";\r\n\r\nconst AllPosts = ({post}) => {\r\n\r\n    const {mainPosts} = useSelector((state) => state.post);\r\n\r\nconsole.log(\"포스트\", mainPosts);\r\n    return(\r\n        <>\r\n        <List \r\n        grid={{\r\n            gutter: 16,\r\n            column: 4\r\n        }}\r\n        dataSource={mainPosts}\r\n        renderItem={(item) => (\r\n            <List.Item>\r\n                <Card \r\n                title={<Link href={`http://localhost:3000/post/${item.id}`}>{item.lookName}</Link>}\r\n                \r\n                cover={<img style={{height: 550}} alt=\"example\" src={`http://localhost:3065/${item.Images[0].src}`} />}\r\n                >\r\n\r\n                </Card>\r\n            </List.Item>\r\n        )}\r\n        />\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async(context) => { \r\n    \r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = ''; \r\n    if(context.req && cookie){ \r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n\r\n   context.store.dispatch(END);\r\n   await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default AllPosts;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,QAAQ,YAAY;AAChC,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,OAAO,MAAM,4BAA4B;AAEhD,MAAMC,QAAQ,GAAG,CAAC;EAACC;AAAI,CAAC,KAAK;EAEzB,MAAM;IAACC;EAAS,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACF,IAAI,CAAC;EAE1DG,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEH,SAAS,CAAC;EACzB,OACI,4BACA,MAAC,IAAI;IACL,IAAI,EAAE;MACFI,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACZ,CAAE;IACF,UAAU,EAAEL,SAAU;IACtB,UAAU,EAAGM,IAAI,IACb,MAAC,IAAI,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACN,MAAC,IAAI;MACL,KAAK,EAAE,MAAC,IAAI;QAAC,IAAI,EAAG,8BAA6BA,IAAI,CAACC,EAAG,EAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAED,IAAI,CAACE,QAAQ,CAAS;MAEnF,KAAK,EAAE;QAAK,KAAK,EAAE;UAACC,MAAM,EAAE;QAAG,CAAE;QAAC,GAAG,EAAC,SAAS;QAAC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI,EAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAGhG,CAEb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,CACC;AAGX,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGf,OAAO,CAACe,kBAAkB,CAAC,MAAMC,OAAO,IAAK;EAE3E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;EAC5DtB,KAAK,CAACyB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAG,EAAE;EAClC,IAAGL,OAAO,CAACE,GAAG,IAAID,MAAM,EAAC;IACrBtB,KAAK,CAACyB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM;EAC1C;EACAD,OAAO,CAACM,KAAK,CAACC,QAAQ,CAAC;IACnBC,IAAI,EAAEzB;EACV,CAAC,CAAC;EAEHiB,OAAO,CAACM,KAAK,CAACC,QAAQ,CAACzB,GAAG,CAAC;EAC3B,MAAMkB,OAAO,CAACM,KAAK,CAACG,QAAQ,CAACC,SAAS,EAAE;AAC3C,CAAC,CAAC;AAEF,eAAezB,QAAQ"},"metadata":{},"sourceType":"module"}