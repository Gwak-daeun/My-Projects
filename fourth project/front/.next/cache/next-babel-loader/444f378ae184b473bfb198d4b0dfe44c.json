{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from \"redux\";\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","state","action","type","console","log","payload","combinedReducer"],"sources":["C:/Users/내컴/Documents/GitHub/My-Projects/fourth project/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from './user';\r\nimport post from './post';\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            console.log('HYDRATE', action);\r\n            return action.payload;\r\n        default: {\r\n            const combinedReducer = combineReducers({\r\n                user, \r\n                post\r\n            });\r\n            return combinedReducer(state, action);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;AAEvC,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAEC,MAAM,EAAK;EACnC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKP,OAAO;MACRQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;MAC9B,OAAOA,MAAM,CAACI,OAAO;IACzB;MAAS;QACL,IAAMC,eAAe,GAAGR,eAAe,CAAC;UACpCF,IAAI,EAAJA,IAAI;UACJC,IAAI,EAAJA;QACJ,CAAC,CAAC;QACF,OAAOS,eAAe,CAACN,KAAK,EAAEC,MAAM,CAAC;MACzC;EAAC;AAET,CAAC;AAGD,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}