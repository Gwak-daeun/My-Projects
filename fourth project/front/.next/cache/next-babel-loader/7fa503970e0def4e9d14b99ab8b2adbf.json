{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\util\\\\dateCellRender.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nconst DateCellRender = () => {\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts[1].createdAt));\n  const getDayInfo = () => {\n    let calendarData;\n    let diaryMoment;\n    for (let i in mainPosts) {\n      diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\n      if (diaryMoment === moment().format(\"YYYY-MM-DD\")) {\n        calendarData = [{\n          photo: mainPosts[i].Images.src\n        }];\n      }\n    }\n    return calendarData || [];\n  };\n  const dayInfo = getDayInfo();\n  const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n  return (\n    //  <img src={photo} style={{width:50}} />\n    __jsx(React.Fragment, null, dayInfo.map(info => __jsx(\"img\", {\n      src: `http://localhost:3065/${info.photo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    })))\n  );\n};\nexport default DateCellRender;","map":{"version":3,"names":["React","useSelector","moment","DateCellRender","mainPosts","state","post","console","log","JSON","stringify","createdAt","getDayInfo","calendarData","diaryMoment","i","format","photo","Images","src","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/util/dateCellRender.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst DateCellRender = () => {\r\n\r\n   const {mainPosts} = useSelector((state) => state.post);\r\n\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts[1].createdAt));\r\n\r\n   const getDayInfo = () => {\r\n      let calendarData;\r\n      let diaryMoment;\r\n      for(let i in mainPosts){\r\n         diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\r\n         if(diaryMoment === moment().format(\"YYYY-MM-DD\")){\r\n            calendarData = [\r\n               {\r\n                  photo: mainPosts[i].Images.src\r\n               }\r\n            ];\r\n         }\r\n      }\r\n      return calendarData || [];\r\n   };\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n   const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n   //  <img src={photo} style={{width:50}} />\r\n  <>\r\n   {dayInfo.map((info) => (\r\n      <img src={`http://localhost:3065/${info.photo}`} />\r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,cAAc,GAAG,MAAM;EAE1B,MAAM;IAACC;EAAS,CAAC,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEtDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC,CAAC;EAClEG,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC,CAAC,CAAC,CAACO,SAAS,CAAC,CAAC;EAE/E,MAAMC,UAAU,GAAG,MAAM;IACtB,IAAIC,YAAY;IAChB,IAAIC,WAAW;IACf,KAAI,IAAIC,CAAC,IAAIX,SAAS,EAAC;MACpBU,WAAW,GAAGZ,MAAM,CAACE,SAAS,CAACW,CAAC,CAAC,CAACJ,SAAS,CAAC,CAACK,MAAM,CAAC,YAAY,CAAC;MACjE,IAAGF,WAAW,KAAKZ,MAAM,EAAE,CAACc,MAAM,CAAC,YAAY,CAAC,EAAC;QAC9CH,YAAY,GAAG,CACZ;UACGI,KAAK,EAAEb,SAAS,CAACW,CAAC,CAAC,CAACG,MAAM,CAACC;QAC9B,CAAC,CACH;MACJ;IACH;IACA,OAAON,YAAY,IAAI,EAAE;EAC5B,CAAC;EAED,MAAMO,OAAO,GAAGR,UAAU,EAAE;EAE5B,MAAMK,KAAK,GAAI,wEAAuE;EAExF;IACE;IACD,4BACEG,OAAO,CAACC,GAAG,CAAEC,IAAI,IACf;MAAK,GAAG,EAAG,yBAAwBA,IAAI,CAACL,KAAM,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAClD,CAAC;EACA;AAEL,CAAC;AAED,eAAed,cAAc"},"metadata":{},"sourceType":"module"}