{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\util\\\\dateCellRender.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Link from 'next/link';\nconst DateCellRender = () => {\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\n  console.log(\"mainposts길이: \", mainPosts.length);\n  //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\n\n  const getDayInfo = () => {\n    let calendarData;\n    let diaryMoment;\n    for (let i = 0; i < mainPosts.length; i++) {\n      console.log(\"생성 날짜\", moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\n      //  console.log(\"diaryMoment:::::\" + diaryMoment);\n\n      if (diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")) {\n        //  console.log(\"if문 실행\");\n        calendarData = [{\n          photo: mainPosts[i].Images[0].src,\n          title: mainPosts[i].lookName,\n          date: diaryMoment\n        }];\n      }\n    }\n    console.log(\"photo:::::\" + JSON.stringify(calendarData));\n    return calendarData || [];\n  };\n  const LookRander = ({\n    photo,\n    title,\n    date\n  }) => {\n    switch (date) {\n      case date:\n        return __jsx(React.Fragment, null, __jsx(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, title), __jsx(Link, {\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          style: {\n            width: 50\n          },\n          src: `http://localhost:3065/${photo}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 10\n          }\n        })));\n      default:\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        });\n    }\n    if (photo && title) {\n      return __jsx(React.Fragment, null, __jsx(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, title), __jsx(Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        style: {\n          width: 50\n        },\n        src: `http://localhost:3065/${photo}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }\n      })));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n  const dayInfo = getDayInfo();\n\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n\n  return (\n    //  <img src={photo} style={{width:50}} />\n    __jsx(React.Fragment, null, dayInfo.map(info => __jsx(\"li\", {\n      key: info.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }, __jsx(LookRander, {\n      date: info.date,\n      photo: info.photo,\n      title: info.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }))))\n  );\n};\nexport default DateCellRender;","map":{"version":3,"names":["React","useSelector","moment","Link","DateCellRender","mainPosts","state","post","console","log","JSON","stringify","length","getDayInfo","calendarData","diaryMoment","i","createdAt","format","photo","Images","src","title","lookName","date","LookRander","width","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/util/dateCellRender.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Link from 'next/link';\r\n\r\nconst DateCellRender = () => {\r\n\r\n   const {mainPosts} = useSelector((state) => state.post);\r\n\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\r\n   console.log(\"mainposts길이: \", mainPosts.length);\r\n //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\r\n\r\n   const getDayInfo = () => {\r\n      let calendarData;\r\n      let diaryMoment;\r\n      for( let i = 0; i < mainPosts.length; i++ ){\r\n         console.log(\"생성 날짜\",  moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\r\n         diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\r\n       //  console.log(\"diaryMoment:::::\" + diaryMoment);\r\n\r\n         if(diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")){\r\n          //  console.log(\"if문 실행\");\r\n            calendarData = [\r\n               {\r\n                  photo: mainPosts[i].Images[0].src,\r\n                  title: mainPosts[i].lookName,\r\n                  date: diaryMoment\r\n               }\r\n            ];\r\n         }\r\n      }\r\n      console.log(\"photo:::::\" + JSON.stringify(calendarData));\r\n      return calendarData || [];\r\n   };\r\n\r\n   const LookRander = ({photo, title, date}) => {\r\n\r\n      switch(date){\r\n         case date : \r\n         return(\r\n            <>\r\n            <h5>{title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n         </Link>\r\n         </>\r\n         );\r\n         default:\r\n         return(\r\n            <div></div>\r\n         );   \r\n         \r\n      }\r\n\r\n      if(photo && title){\r\n         return(\r\n            <>\r\n            <h5>{title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n         </Link>\r\n         </>\r\n         );\r\n      }\r\n      else{\r\n         return(\r\n            <div></div>\r\n         );\r\n      }\r\n\r\n   }\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n   //  <img src={photo} style={{width:50}} />\r\n  <>\r\n   {dayInfo.map((info) => (\r\n\r\n         <li key={info.date} >\r\n            <LookRander date={info.date} photo={info.photo} title={info.title} />\r\n         </li>\r\n\r\n      \r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":"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"},"metadata":{},"sourceType":"module"}