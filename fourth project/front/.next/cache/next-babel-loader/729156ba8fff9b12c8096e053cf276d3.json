{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\pages\\\\profile.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Button, Calendar, Col, Row } from 'antd';\nimport MyInfo from \"../components/myInfo\";\nimport './css/profile.module.css';\nimport Mention from \"../components/mention\";\nimport LikeList from \"../components/likeList\";\nimport Followers from \"../components/followers\";\nimport Followings from \"../components/followings\";\nimport Card from \"antd/lib/card/Card\";\nimport Login from \"./login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from \"next/link\";\nimport { CHECK_DATE_REQUEST, LOAD_POST_REQUEST } from \"../reducers/post\";\nimport wrapper from '../store/configureStore';\nimport useSWR from \"swr\";\nimport DateCellRender from \"../util/dateCellRender\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nvar OneProfile = styled.div.withConfig({\n  displayName: \"profile__OneProfile\",\n  componentId: \"sc-ghb8e3-0\"\n})([\".div1{position:relative;width:1250px;}.div2{float:left;}.section1{margin-top:50px;}.button1{background-color:black;color:white;}.cal1{width:700px;height:1010px;}.row1{margin-top:15px;}\"]);\n_c = OneProfile;\nvar Profile = function Profile() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    checkDateError = _useSelector.checkDateError,\n    checkDateDone = _useSelector.checkDateDone;\n  var _useSelector2 = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector2.me;\n  var today = new Date();\n  var year = today.getFullYear(); // 년도\n  var month = today.getMonth() + 1; // 월\n  var date = today.getDate(); // 날짜\n\n  // 월, 날짜가 10보다 작으면 앞에 0을 붙여주기\n  var formattedMonth = month < 10 ? \"0\".concat(month) : month;\n  var formattedDate = date < 10 ? \"0\".concat(date) : date;\n  var todayDateString = \"\".concat(year, \"-\").concat(formattedMonth, \"-\").concat(formattedDate);\n  console.log(todayDateString);\n\n  //게시글 작성 전 오늘 작성한 게시글 있나 확인\n  var checkDate = useCallback(function () {\n    var formData = new FormData();\n    formData.append('todayDateString', todayDateString);\n    formData.append('UserId', me.id);\n    dispatch({\n      type: CHECK_DATE_REQUEST,\n      data: formData\n    });\n  });\n  console.log(\"날짜 이미 있는 경우: \", checkDateError);\n  console.log(\"아직 없는 경우: \", checkDateDone);\n  useEffect(function () {\n    if (checkDateError) {\n      window.alert(checkDateError);\n      window.location.reload();\n    }\n    if (checkDateDone === true) {\n      Router.push(\"/newLook\");\n    }\n  }, [checkDateError, checkDateDone]);\n  return __jsx(OneProfile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"div1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"section1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 18\n    }\n  }, \"MY Profile\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    className: \"button1\",\n    onClick: checkDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }\n  }, \"\\uC624\\uB298\\uC758 \\uB370\\uC77C\\uB9AC\\uB8E9 \\uB9CC\\uB4E4\\uAE30\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"div2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(Calendar, {\n    id: \"cal\",\n    className: \"cal1\",\n    dateCellRender: DateCellRender,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    className: \"div2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(MyInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), __jsx(Mention, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), __jsx(LikeList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }))), __jsx(Row, {\n    className: \"row1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(Followers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), __jsx(Followings, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })))));\n};\n_s(Profile, \"z+yl2EdYByr4sy0xYrrsHP0P5Bg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c2 = Profile;\nexport default Profile;\nvar _c, _c2;\n$RefreshReg$(_c, \"OneProfile\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"names":["React","useCallback","useEffect","AppLayout","Button","Calendar","Col","Row","MyInfo","Mention","LikeList","Followers","Followings","Card","Login","useDispatch","useSelector","Link","CHECK_DATE_REQUEST","LOAD_POST_REQUEST","wrapper","useSWR","DateCellRender","styled","Router","OneProfile","div","Profile","dispatch","state","post","checkDateError","checkDateDone","user","me","today","Date","year","getFullYear","month","getMonth","date","getDate","formattedMonth","formattedDate","todayDateString","console","log","checkDate","formData","FormData","append","id","type","data","window","alert","location","reload","push"],"sources":["C:/Users/내컴/Desktop/fashionary/front/pages/profile.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { Button, Calendar, Col, Row } from 'antd';\r\nimport MyInfo from \"../components/myInfo\";\r\nimport './css/profile.module.css';\r\nimport Mention from \"../components/mention\";\r\nimport LikeList from \"../components/likeList\";\r\nimport Followers from \"../components/followers\";\r\nimport Followings from \"../components/followings\";\r\nimport Card from \"antd/lib/card/Card\";\r\nimport Login from \"./login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Link from \"next/link\";\r\nimport { CHECK_DATE_REQUEST, LOAD_POST_REQUEST } from \"../reducers/post\";\r\nimport wrapper from '../store/configureStore';\r\nimport useSWR from \"swr\";\r\nimport DateCellRender from \"../util/dateCellRender\";\r\nimport styled from \"styled-components\";\r\nimport  Router  from \"next/router\";\r\n\r\nconst OneProfile = styled.div`\r\n\r\n    .div1{\r\n        position: relative;\r\n        width: 1250px;\r\n    }\r\n    .div2{\r\n        float: left;\r\n    }\r\n    .section1{\r\n        margin-top: 50px;\r\n    }\r\n    .button1{\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n    .cal1{\r\n        width: 700px;\r\n        height: 1010px;\r\n    }\r\n    .row1{\r\n        margin-top: 15px;\r\n    }\r\n`;\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {checkDateError, checkDateDone} = useSelector((state) => state.post);\r\n\r\n    const {me} = useSelector((state) => state.user);\r\n\r\n    const today = new Date();\r\nconst year = today.getFullYear(); // 년도\r\nconst month = today.getMonth() + 1; // 월\r\nconst date = today.getDate(); // 날짜\r\n\r\n// 월, 날짜가 10보다 작으면 앞에 0을 붙여주기\r\nconst formattedMonth = month < 10 ? `0${month}` : month;\r\nconst formattedDate = date < 10 ? `0${date}` : date;\r\n\r\nconst todayDateString = `${year}-${formattedMonth}-${formattedDate}`;\r\n\r\nconsole.log(todayDateString);\r\n\r\n//게시글 작성 전 오늘 작성한 게시글 있나 확인\r\n    const checkDate = useCallback(() => {\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('todayDateString', todayDateString);\r\n        formData.append('UserId', me.id);\r\n\r\n        dispatch({\r\n            type: CHECK_DATE_REQUEST,\r\n            data: formData\r\n        });\r\n    });\r\n\r\n    console.log(\"날짜 이미 있는 경우: \", checkDateError);\r\n    console.log(\"아직 없는 경우: \", checkDateDone);\r\n\r\n    useEffect(() => {\r\n        if(checkDateError){\r\n            window.alert(checkDateError);\r\n            window.location.reload();\r\n        }\r\n        if(checkDateDone === true){\r\n            Router.push(`/newLook`);\r\n        }\r\n    }, [checkDateError, checkDateDone]);\r\n\r\n return(\r\n    <OneProfile>\r\n    <div className=\"div1\">\r\n        <section className=\"section1\">\r\n            <Row><h1>MY Profile</h1></Row>\r\n                <Row><Button  className=\"button1\" onClick={checkDate}>오늘의 데일리룩 만들기</Button></Row>\r\n                <Row>\r\n                    <div className=\"div2\">\r\n                        <Card>\r\n                            <Calendar \r\n                            id='cal'\r\n                            className=\"cal1\"\r\n                            dateCellRender={DateCellRender}\r\n                            />\r\n\r\n                        </Card>\r\n                    </div>\r\n                <div className=\"div2\">\r\n                    <MyInfo /> \r\n                    <Mention />\r\n                    <LikeList />\r\n                </div>\r\n            </Row>\r\n            <Row className=\"row1\">\r\n                <Followers  />\r\n                <Followings  />   \r\n            </Row>  \r\n        </section>\r\n    </div>\r\n    </OneProfile>\r\n\r\n );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}