{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\dateCellRender.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { createElement } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Link from 'next/link';\nvar DateCellRender = function DateCellRender() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(me));\n  console.log(\"mainposts길이: \", me.length);\n  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\n  var getDayInfo = function getDayInfo() {\n    var calendarData;\n    var diaryMoment;\n    for (var i = 0; i < me.length; i++) {\n      console.log(\"생성 날짜\", moment(me[i].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\n      if (diaryMoment) {\n        calendarData = [{\n          photo: mainPosts[i].Images[0].src,\n          title: mainPosts[i].lookName,\n          date: diaryMoment,\n          id: mainPosts[i].id\n        }];\n      }\n    }\n    console.log(\"calendarData:::::\" + JSON.stringify(calendarData));\n    return calendarData || [];\n  };\n  var PhotoRander = function PhotoRander(_ref) {\n    var photo = _ref.photo;\n    switch (photo) {\n      case photo:\n        return __jsx(Link, {\n          href: \"#\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          style: {\n            width: 50\n          },\n          src: \"http://localhost:3065/\".concat(photo),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }));\n      default:\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        });\n    }\n\n    // if(photo && title){\n    //    return(\n    //       <>\n    //       <h5>{title}</h5>\n    //       <Link href=\"#\">\n    //    <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\n    //    </Link>\n    //    </>\n    //    );\n    // }\n    // else{\n    //    return(\n    //       <div></div>\n    //    );\n    // }\n  };\n\n  var NameRander = function NameRander(_ref2) {\n    var name = _ref2.name;\n    switch (name) {\n      case name:\n        return __jsx(\"h5\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        }, name);\n      default:\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        });\n    }\n  };\n  var dayInfo = getDayInfo();\n\n  //   //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, dayInfo.map(function (info) {\n    return __jsx(\"li\", {\n      key: info.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }, __jsx(NameRander, {\n      name: info.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }), __jsx(PhotoRander, {\n      photo: info.photo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    }));\n  }));\n};\n_s(DateCellRender, \"w2b5rwE/wumJi8RNmPJOutGjGrs=\", false, function () {\n  return [useSelector];\n});\n_c = DateCellRender;\nexport default DateCellRender;\nvar _c;\n$RefreshReg$(_c, \"DateCellRender\");","map":{"version":3,"names":["React","createElement","useSelector","moment","Link","DateCellRender","state","user","me","console","log","JSON","stringify","length","mainPosts","Images","src","getDayInfo","calendarData","diaryMoment","i","createdAt","format","photo","title","lookName","date","id","PhotoRander","width","NameRander","name","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/dateCellRender.js"],"sourcesContent":["import React, { createElement } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Link from 'next/link';\r\n\r\nconst DateCellRender = () => {\r\n\r\n   const {me} = useSelector((state) => state.user);\r\n\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(me));\r\n   console.log(\"mainposts길이: \", me.length);\r\n  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\r\n\r\n   const getDayInfo = () => {\r\n      let calendarData;\r\n      let diaryMoment;\r\n\r\n      for( let i = 0; i < me.length; i++ ){\r\n         console.log(\"생성 날짜\",  moment(me[i].createdAt).format(\"YYYY-MM-DD\"));\r\n         diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\r\n\r\n         if(diaryMoment){\r\n            calendarData = [\r\n               {\r\n                  photo: mainPosts[i].Images[0].src,\r\n                  title: mainPosts[i].lookName,\r\n                  date: diaryMoment,\r\n                  id: mainPosts[i].id\r\n               },\r\n            ];\r\n         }\r\n      }\r\n\r\n      console.log(\"calendarData:::::\" + JSON.stringify(calendarData));\r\n      return calendarData || [];\r\n   };\r\n\r\n   const PhotoRander = ({photo}) => {\r\n\r\n      switch(photo){\r\n         case photo : \r\n         return (\r\n            <Link href=\"#\">\r\n                <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n            </Link>\r\n         );\r\n         default:\r\n         return(\r\n            <div></div>\r\n         );   \r\n      }\r\n\r\n      // if(photo && title){\r\n      //    return(\r\n      //       <>\r\n      //       <h5>{title}</h5>\r\n      //       <Link href=\"#\">\r\n      //    <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n      //    </Link>\r\n      //    </>\r\n      //    );\r\n      // }\r\n      // else{\r\n      //    return(\r\n      //       <div></div>\r\n      //    );\r\n      // }\r\n\r\n   };\r\n\r\n   const NameRander = ({name}) => {\r\n\r\n      switch(name){\r\n         case name : \r\n         return(\r\n            <h5>{name}</h5>\r\n         );\r\n         default:\r\n         return(\r\n            <div></div>\r\n         );   \r\n      }\r\n\r\n   };\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n//   //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n  <div>\r\n   {dayInfo.map((info) => (\r\n\r\n         <li key={info.id} >\r\n            {/* <LookRander date={info.date} photo={info.photo} title={info.title} /> */}\r\n             {/* <h5>{info.title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${info.photo}`} />\r\n         </Link> */}\r\n         <NameRander name={info.title} />\r\n         <PhotoRander photo={info.photo} />\r\n         </li>\r\n\r\n      \r\n   ))}\r\n  </div>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":"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"},"metadata":{},"sourceType":"module"}