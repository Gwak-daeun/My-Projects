{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\components\\\\newComment.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { HeartOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Form, Rate, Row, Upload } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nvar NewComment = function NewComment(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useState = useState([]),\n    fileList = _useState[0],\n    setFileList = _useState[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostDone = _useSelector.addPostDone;\n  var _useState2 = useState({}),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    content = _useInput2[0],\n    onChangeContent = _useInput2[1],\n    setContent = _useInput2[2];\n  var handleRate = function handleRate(value) {\n    setValue(value);\n    console.log(\"점수:::\" + value);\n  };\n  var onChangeImages = useCallback(function (_ref2) {\n    var newFileList = _ref2.fileList;\n    //   setFileList(newFileList);\n    //   console.log('images', fileList);\n    //   const imageFormData = new FormData();\n    //   [].forEach.call(fileList, (f) => {\n    //       imageFormData.append('image', f);\n    //   });\n\n    //   // console.log(\"imageForm:::\", imageFormData);\n    //  return dispatch({\n    //       type: UPLOAD_IMAGES_REQUEST,\n    //       data: imageFormData\n    //   });\n\n    setFileList(newFileList);\n    console.log('images', fileList);\n    var imageFormData = new FormData();\n    // fileList.forEach(file => imageFormData.append('files', file));\n\n    // for(let i = 0; i < commentRate.length; i++){\n    //   rateArr.push(commentRate[i].dataValues.rate);\n    // }\n\n    for (var _i = 0, _Object$entries = Object.entries(fileList); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        _value = _Object$entries$_i[1];\n      if (_value !== undefined) {\n        console.log(\"파일리스트 키?\", fileList[key]);\n        //  console.log(\"파일리스트 안?\", fileList[key].fileList[0]?.originFileObj);\n      }\n    }\n\n    for (var i = 0; i < fileList.length; i++) {\n      imageFormData.append('image', fileList[i].originFileObj);\n    }\n\n    // return dispatch({\n    //     type: UPLOAD_IMAGES_REQUEST,\n    //     data: imageFormData\n    // });\n  });\n\n  //미리보기\n  var onPreview = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n            case 4:\n              src = _context.sent;\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow === null || imgWindow === void 0 ? void 0 : imgWindow.document.write(image.outerHTML);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function onPreview(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  //댓글 등록\n  var onSubmit = useCallback(function (_ref4) {\n    var newFileList = _ref4.fileList;\n    var formData = new FormData();\n    setFileList(newFileList);\n    for (var i = 0; i < fileList.length; i++) {\n      formData.append('image', fileList[i].originFileObj);\n    }\n    formData.append('content', content);\n    formData.append('rate', value);\n    formData.append('postId', post.id);\n    formData.append('userId', id);\n\n    //   console.log(\"댓글:::::\" + content);\n    // for (let value of formData.values()) {\n    //   console.log(\"폼데이터:::::\" + value);\n    // }\n\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: formData\n    });\n  }, [content, value, imagePaths]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    style: {\n      width: 400,\n      marginLeft: 720,\n      height: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }\n  }, \"Comment\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 22\n    }\n  }, \"My rate is...\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 16\n    }\n  }, __jsx(Rate, {\n    style: {\n      fontSize: 50\n    },\n    onChange: handleRate,\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 20\n    }\n  }, \"My commnet is...\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \" \", __jsx(TextArea, {\n    showCount: true,\n    maxLength: 250,\n    value: content,\n    onChange: onChangeContent,\n    style: {\n      height: 110,\n      resize: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 22\n    }\n  }, \"I recommend this!\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 22\n    }\n  }, \"\\uC544\\uC774\\uD15C \\uCD94\\uCC9C\\uC740 2\\uAC1C\\uAE4C\\uC9C0 \\uAC00\\uB2A5\\uD574\\uC694.\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, __jsx(Upload, {\n    name: \"image\",\n    listType: \"picture-card\",\n    multiple: true,\n    fileList: fileList,\n    onChange: onChangeImages,\n    onPreview: onPreview,\n    onRemove: onRemoveImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 16\n    }\n  }, fileList.length < 2 && 'Drag images or click')), __jsx(Button, {\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"\\uB313\\uAE00 \\uB2EC\\uAE30\"))));\n};\n_s(NewComment, \"eiH3oeA6dSY0XFFYXrZ/5+lyGME=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = NewComment;\nexport default NewComment;\nvar _c;\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"names":["HeartOutlined","InboxOutlined","Button","Card","Form","Rate","Row","Upload","TextArea","useCallback","useState","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","NewComment","post","dispatch","fileList","setFileList","id","state","user","me","imagePaths","addPostDone","value","setValue","content","onChangeContent","setContent","handleRate","console","log","onChangeImages","newFileList","imageFormData","FormData","Object","entries","key","undefined","i","length","append","originFileObj","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","onSubmit","formData","type","data","onRemoveImage","index","width","marginLeft","height","fontSize","resize"],"sources":["C:/Users/내컴/Desktop/fashionary/front/components/newComment.js"],"sourcesContent":["import { HeartOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Form, Rate, Row, Upload } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_COMMENT_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\r\n\r\n\r\nconst NewComment = ({post}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n\r\n    const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n\r\n\r\n    const [value, setValue] = useState({});\r\n\r\n    const [ content, onChangeContent, setContent ] = useInput('');\r\n\r\n    const handleRate = (value) => {\r\n      setValue(value);\r\n      console.log(\"점수:::\" + value);\r\n    };\r\n\r\n      const onChangeImages = useCallback(({ fileList: newFileList }) => {\r\n      //   setFileList(newFileList);\r\n      //   console.log('images', fileList);\r\n      //   const imageFormData = new FormData();\r\n      //   [].forEach.call(fileList, (f) => {\r\n      //       imageFormData.append('image', f);\r\n      //   });\r\n\r\n      //   // console.log(\"imageForm:::\", imageFormData);\r\n      //  return dispatch({\r\n      //       type: UPLOAD_IMAGES_REQUEST,\r\n      //       data: imageFormData\r\n      //   });\r\n\r\n      setFileList(newFileList);\r\n      console.log('images', fileList);\r\n      const imageFormData = new FormData();\r\n      // fileList.forEach(file => imageFormData.append('files', file));\r\n\r\n      // for(let i = 0; i < commentRate.length; i++){\r\n      //   rateArr.push(commentRate[i].dataValues.rate);\r\n      // }\r\n\r\n      for(const [key, value] of Object.entries(fileList)){\r\n        if(value !== undefined){\r\n          console.log(\"파일리스트 키?\", fileList[key]);\r\n        //  console.log(\"파일리스트 안?\", fileList[key].fileList[0]?.originFileObj);\r\n        }\r\n      }\r\n      \r\n      for(let i = 0; i< fileList.length; i++){\r\n        imageFormData.append('image', fileList[i].originFileObj);\r\n      }\r\n      \r\n\r\n        // return dispatch({\r\n        //     type: UPLOAD_IMAGES_REQUEST,\r\n        //     data: imageFormData\r\n        // });\r\n\r\n      });\r\n\r\n      //미리보기\r\n      const onPreview = async (file) => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow?.document.write(image.outerHTML);\r\n      };\r\n\r\n      //댓글 등록\r\n      const onSubmit = useCallback(({ fileList: newFileList }) => {\r\n\r\n        const formData = new FormData();\r\n        setFileList(newFileList);\r\n        for(let i = 0; i< fileList.length; i++){\r\n          formData.append('image',fileList[i].originFileObj);\r\n        }\r\n        formData.append('content', content);\r\n        formData.append('rate', value);\r\n\r\n        formData.append('postId', post.id);\r\n        formData.append('userId', id);\r\n\r\n     //   console.log(\"댓글:::::\" + content);\r\n        // for (let value of formData.values()) {\r\n        //   console.log(\"폼데이터:::::\" + value);\r\n        // }\r\n\r\n        dispatch({\r\n          type: ADD_COMMENT_REQUEST,\r\n          data: formData\r\n        });\r\n\r\n      }, [content, value, imagePaths]);\r\n\r\n      const onRemoveImage = useCallback((index) => () => {\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            data: index\r\n        });\r\n      });\r\n\r\n    return(\r\n        <div>\r\n          <Form encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Card\r\n              style={{\r\n                width: 400,\r\n                marginLeft: 720, height: 0\r\n              }}\r\n            >\r\n                <Row><h2>Comment</h2></Row>\r\n                <Row><h2>My rate is...</h2></Row>\r\n               <Row><Rate style={{fontSize: 50}} onChange={handleRate} value={value} /></Row>  \r\n              <br />\r\n              <Row><h2>My commnet is...</h2></Row>\r\n              \r\n              <Row> <TextArea\r\n                    showCount\r\n                    maxLength={250}\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    style={{\r\n                        height: 110,\r\n                        resize: 'none',\r\n                        \r\n                    }}\r\n                    />\r\n                </Row>\r\n                <br />\r\n                <Row><h2>I recommend this!</h2></Row>\r\n                <Row><h3>아이템 추천은 2개까지 가능해요.</h3></Row>\r\n                <Row>\r\n               <Upload\r\n               name='image'\r\n               listType=\"picture-card\"\r\n               multiple\r\n               fileList={fileList}\r\n               onChange={onChangeImages}\r\n               onPreview={onPreview}\r\n               onRemove={onRemoveImage}\r\n               >\r\n               {fileList.length < 2 && 'Drag images or click'}\r\n               </Upload>\r\n                </Row>\r\n                <Button htmlType=\"submit\">댓글 달기</Button>\r\n            </Card>\r\n          </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewComment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}