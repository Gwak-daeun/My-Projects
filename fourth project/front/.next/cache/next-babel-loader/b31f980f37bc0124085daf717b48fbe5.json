{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uB0B4\\uCEF4\\\\Desktop\\\\fashionary\\\\front\\\\util\\\\dateCellRender.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Link from 'next/link';\nvar DateCellRender = function DateCellRender() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector.mainPosts;\n  console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\n  console.log(\"mainposts길이: \", mainPosts.length);\n  //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\n\n  var getDayInfo = function getDayInfo() {\n    var calendarData;\n    var diaryMoment;\n    for (var i = 0; i < mainPosts.length; i++) {\n      console.log(\"생성 날짜\", moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\n      switch (diaryMoment) {\n        case diaryMoment:\n          calendarData = [{\n            photo: mainPosts[i].Images[0].src,\n            title: mainPosts[i].lookName,\n            date: diaryMoment,\n            id: mainPosts[i].id\n          }];\n          break;\n        default:\n      }\n\n      // if(diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")){\n      //  //  console.log(\"if문 실행\");\n      //    calendarData = [\n      //       {\n      //          photo: mainPosts[i].Images[0].src,\n      //          title: mainPosts[i].lookName,\n      //          date: diaryMoment,\n      //          id: mainPosts[i].id\n      //       }\n      //    ];\n      // }\n    }\n\n    console.log(\"photo:::::\" + JSON.stringify(calendarData));\n    return calendarData || [];\n  };\n  var LookRander = function LookRander(_ref) {\n    var photo = _ref.photo,\n      title = _ref.title,\n      date = _ref.date;\n    // switch(date){\n    //    case date : \n    //    return(\n    //       <>\n    //       <h5>{title}</h5>\n    //       <Link href=\"#\">\n    //    <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\n    //    </Link>\n    //    </>\n    //    );\n    //    default:\n    //    return(\n    //       <div></div>\n    //    );   \n\n    // }\n\n    if (photo && title) {\n      return __jsx(React.Fragment, null, __jsx(\"h5\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, title), __jsx(Link, {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        style: {\n          width: 50\n        },\n        src: \"http://localhost:3065/\".concat(photo),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }\n      })));\n    } else {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n  var dayInfo = getDayInfo();\n\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\n\n  return (\n    //  <img src={photo} style={{width:50}} />\n    __jsx(React.Fragment, null, dayInfo.map(function (info) {\n      return __jsx(\"li\", {\n        key: info.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }\n      }, __jsx(LookRander, {\n        date: info.date,\n        photo: info.photo,\n        title: info.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }));\n    }))\n  );\n};\n_s(DateCellRender, \"zf+rAEzEiCW0nHHHgaXKn4vNzC8=\", false, function () {\n  return [useSelector];\n});\n_c = DateCellRender;\nexport default DateCellRender;\nvar _c;\n$RefreshReg$(_c, \"DateCellRender\");","map":{"version":3,"names":["React","useSelector","moment","Link","DateCellRender","state","post","mainPosts","console","log","JSON","stringify","length","getDayInfo","calendarData","diaryMoment","i","createdAt","format","photo","Images","src","title","lookName","date","id","LookRander","width","dayInfo","map","info"],"sources":["C:/Users/내컴/Desktop/fashionary/front/util/dateCellRender.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Link from 'next/link';\r\n\r\nconst DateCellRender = () => {\r\n\r\n   const {mainPosts} = useSelector((state) => state.post);\r\n\r\n   console.log(\"DateCellRender:::::::::\" + JSON.stringify(mainPosts));\r\n   console.log(\"mainposts길이: \", mainPosts.length);\r\n //  console.log(\"Render:::::::::\" + JSON.stringify(mainPosts[0].Images[0].src));\r\n\r\n   const getDayInfo = () => {\r\n      let calendarData;\r\n      let diaryMoment;\r\n\r\n\r\n\r\n      for( let i = 0; i < mainPosts.length; i++ ){\r\n         console.log(\"생성 날짜\",  moment(mainPosts[0].createdAt).format(\"YYYY-MM-DD\"));\r\n         diaryMoment = moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\");\r\n\r\n         switch(diaryMoment){\r\n            case diaryMoment: \r\n            calendarData = [\r\n               {\r\n                  photo: mainPosts[i].Images[0].src,\r\n                  title: mainPosts[i].lookName,\r\n                  date: diaryMoment,\r\n                  id: mainPosts[i].id\r\n               }\r\n            ];\r\n            break;\r\n            default:\r\n\r\n         }\r\n\r\n         // if(diaryMoment === moment(mainPosts[i].createdAt).format(\"YYYY-MM-DD\")){\r\n         //  //  console.log(\"if문 실행\");\r\n         //    calendarData = [\r\n         //       {\r\n         //          photo: mainPosts[i].Images[0].src,\r\n         //          title: mainPosts[i].lookName,\r\n         //          date: diaryMoment,\r\n         //          id: mainPosts[i].id\r\n         //       }\r\n         //    ];\r\n         // }\r\n      }\r\n\r\n\r\n\r\n      console.log(\"photo:::::\" + JSON.stringify(calendarData));\r\n      return calendarData || [];\r\n   };\r\n\r\n   const LookRander = ({photo, title, date}) => {\r\n\r\n      // switch(date){\r\n      //    case date : \r\n      //    return(\r\n      //       <>\r\n      //       <h5>{title}</h5>\r\n      //       <Link href=\"#\">\r\n      //    <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n      //    </Link>\r\n      //    </>\r\n      //    );\r\n      //    default:\r\n      //    return(\r\n      //       <div></div>\r\n      //    );   \r\n         \r\n      // }\r\n\r\n      if(photo && title){\r\n         return(\r\n            <>\r\n            <h5>{title}</h5>\r\n            <Link href=\"#\">\r\n         <img style={{width: 50}} src={`http://localhost:3065/${photo}`} />\r\n         </Link>\r\n         </>\r\n         );\r\n      }\r\n      else{\r\n         return(\r\n            <div></div>\r\n         );\r\n      }\r\n\r\n   }\r\n\r\n   const dayInfo = getDayInfo();\r\n\r\n  //const photo = `http://localhost:3065/sean-kong-1dJmkdVuelg-unsplash_1669727155305.jpg`;\r\n\r\n return(\r\n   //  <img src={photo} style={{width:50}} />\r\n  <>\r\n   {dayInfo.map((info) => (\r\n\r\n         <li key={info.id} >\r\n            <LookRander date={info.date} photo={info.photo} title={info.title} />\r\n         </li>\r\n\r\n      \r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default DateCellRender;"],"mappings":"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"},"metadata":{},"sourceType":"module"}