{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\n\nimport produce from '../util/produce';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  singlePost: null,\n  keywords: null,\n  newLookKeywords: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  uploadUpdateLookimageLoading: false,\n  uploadUpdateLookimageError: null,\n  uploadUpdateLookimageDone: false,\n  updateCommentRateLoading: false,\n  updateCommentRateError: null,\n  updateCommentRateDone: false,\n  checkDateLoading: false,\n  checkDateError: null,\n  checkDateDone: false,\n  searchKeywordLoading: false,\n  searchKeywordError: null,\n  searchKeywordDone: false\n};\nexport const CHECK_DATE_REQUEST = 'CHECK_DATE_REQUEST';\nexport const CHECK_DATE_SUCCESS = 'CHECK_DATE_SUCCESS';\nexport const CHECK_DATE_FAILURE = 'CHECK_DATE_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const NEW_COMMENT_IMAGES_REQUEST = 'NEW_COMMENT_IMAGES_REQUEST';\nexport const NEW_COMMENT_IMAGES_SUCCESS = 'NEW_COMMENT_IMAGES_SUCCESS';\nexport const NEW_COMMENT_IMAGES_FAILURE = 'NEW_COMMENT_IMAGES_FAILURE';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_REQUEST = 'UPLOAD_UPDATE_LOOK_IMAGE_REQUEST';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS = 'UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS';\nexport const UPLOAD_UPDATE_LOOK_IMAGE_FAILURE = 'UPLOAD_UPDATE_LOOK_IMAGE_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_NEW_POSTS_REQUEST = 'LOAD_NEW_POSTS_REQUEST';\nexport const LOAD_NEW_POSTS_SUCCESS = 'LOAD_NEW_POSTS_SUCCESS';\nexport const LOAD_NEW_POSTS_FAILURE = 'LOAD_NEW_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport const UPDATE_COMMENT_RATE_REQUEST = 'UPDATE_COMMENT_RATE_REQUEST';\nexport const UPDATE_COMMENT_RATE_SUCCESS = 'UPDATE_COMMENT_RATE_SUCCESS';\nexport const UPDATE_COMMENT_RATE_FAILURE = 'UPDATE_COMMENT_RATE_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const SEARCH_KEYWORD_REQUEST = 'SEARCH_KEYWORD_REQUEST';\nexport const SEARCH_KEYWORD_SUCCESS = 'SEARCH_KEYWORD_SUCCESS';\nexport const SEARCH_KEYWORD_FAILURE = 'SEARCH_KEYWORD_FAILURE';\nexport const NEWLOOK_KEYWORD_REQUEST = 'NEWLOOK_KEYWORD_REQUEST';\nexport const NEWLOOK_KEYWORD_SUCCESS = 'NEWLOOK_KEYWORD_SUCCESS';\nexport const NEWLOOK_KEYWORD_FAILURE = 'NEWLOOK_KEYWORD_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n// export const addPost = (data) => ({\n//   type: ADD_POST_REQUEST,\n//   data,\n// });\n\n// export const addComment = (data) => ({\n//   type: ADD_COMMENT_REQUEST,\n//   data,\n// });\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n    case RETWEET_SUCCESS:\n      draft.retweetLoading = false;\n      draft.retweetDone = true;\n      draft.mainPosts.unshift(action.data); //리트윗된 게시글 메인포스트에 추가\n      break;\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetError = action.error;\n      break;\n    case UPLOAD_IMAGES_REQUEST:\n    case NEW_COMMENT_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = null;\n      break;\n    case UPLOAD_IMAGES_SUCCESS:\n    case NEW_COMMENT_IMAGES_SUCCESS:\n      {\n        console.log(\"reducer image\", action.data);\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n    case UPLOAD_IMAGES_FAILURE:\n    case NEW_COMMENT_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    // case LOAD_USER_POSTS_REQUEST:\n    case LOAD_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_NEW_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    // case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_POSTS_SUCCESS:\n    case LOAD_NEW_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.hasMorePosts = draft.mainPosts.length === 10;\n      break;\n    // case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_POSTS_FAILURE:\n    case LOAD_NEW_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      draft.imagePaths = []; //업로드 했는데 이미지 주소 남아있으면 안되니까 주소 초기화\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = null;\n      break;\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = true;\n      console.log(\"업데이트 완료 후 데이터: \", action.data);\n      draft.singlePost = action.data;\n      break;\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.singlePost;\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        draft.imagePaths = [];\n        break;\n      }\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    case REMOVE_COMMENT_REQUEST:\n      draft.removeCommentLoading = true;\n      draft.removeCommentDone = false;\n      draft.removeCommentError = null;\n    case REMOVE_COMMENT_SUCCESS:\n      draft.removeCommentLoading = false;\n      draft.removeCommentDone = true;\n      console.log(\"댓글 삭제 리듀서: \", action.data);\n      draft.singlePost.Comments = draft.singlePost.Comments.filter(v => v.id !== action.data.id);\n      break;\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_REQUEST:\n      draft.uploadUpdateLookimageLoading = true;\n      draft.uploadUpdateLookimageError = null;\n      draft.uploadUpdateLookimageDone = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_SUCCESS:\n      draft.imagePaths = action.data;\n      draft.uploadUpdateLookimageDone = true;\n      draft.uploadUpdateLookimageLoading = false;\n      break;\n    case UPLOAD_UPDATE_LOOK_IMAGE_FAILURE:\n      draft.uploadUpdateLookimageLoading = false;\n      draft.uploadUpdateLookimageError = action.error;\n      break;\n    case UPDATE_COMMENT_RATE_REQUEST:\n      draft.updateCommentRateLoading = true;\n      draft.updateCommentRateError = null;\n      draft.updateCommentRateDone = false;\n      break;\n    case UPDATE_COMMENT_RATE_SUCCESS:\n      console.log(\"댓글 점수 수정 성공: \", action.data);\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateDone = true;\n      draft.singlePost.rateAverage = action.data.rateAverage;\n      break;\n    case UPDATE_COMMENT_RATE_FAILURE:\n      draft.updateCommentRateLoading = false;\n      draft.updateCommentRateError = action.error;\n      break;\n    case CHECK_DATE_REQUEST:\n      draft.checkDateLoading = true;\n      draft.checkDateError = null;\n      draft.checkDateDone = false;\n      break;\n    case CHECK_DATE_SUCCESS:\n      draft.checkDateLoading = false;\n      draft.checkDateDone = true;\n      break;\n    case CHECK_DATE_FAILURE:\n      draft.checkDateLoading = false;\n      console.log(\"날짜 에러 확인\", action.data);\n      draft.checkDateError = action.data.message;\n      break;\n    case SEARCH_KEYWORD_REQUEST:\n      draft.searchKeywordLoading = true;\n      draft.searchKeywordError = null;\n      draft.searchKeywordDone = false;\n      break;\n    case SEARCH_KEYWORD_SUCCESS:\n      draft.searchKeywordLoading = false;\n      draft.searchKeywordDone = true;\n      draft.keywords = action.data;\n      break;\n    case SEARCH_KEYWORD_FAILURE:\n      draft.searchKeywordLoading = false;\n      draft.searchKeywordError = action.data;\n      break;\n    case NEWLOOK_KEYWORD_REQUEST:\n      break;\n    case NEWLOOK_KEYWORD_SUCCESS:\n      draft.searchKeywordLoading = false;\n      draft.searchKeywordDone = true;\n      draft.newLookKeywords = action.data;\n      break;\n    case NEWLOOK_KEYWORD_FAILURE:\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}