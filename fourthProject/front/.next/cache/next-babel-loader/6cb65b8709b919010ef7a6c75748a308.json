{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_CALENDAR_DATA_REQUEST } from '../reducers/user';\nimport Login from './login';\nimport Profile from './profile';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport DateCellRender from '../util/dateCellRender';\nimport AllPosts from './post/allPosts';\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n\n  //  const {data, error} = useSWR(`http://localhost:3065/posts/${me.id}/allLooks`, fetcher);\n\n  console.log(\"인덱스 데이터\", me);\n  console.log(\"인덱스 mainposts: \", mainPosts);\n\n  //  console.log(\":::::::me:::::\" + JSON.stringify(me));\n  //  console.log(\"post:::::\" + JSON.stringify(mainPosts));\n\n  // if(error){\n  //     console.error(error);\n  //     return window.alert('게시글 로딩 중 에러 발생');\n  // }\n\n  return __jsx(AppLayout, null, me ? __jsx(Profile, null) : __jsx(Login, null));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  // context.store.dispatch({\n  //     type: LOAD_POSTS_REQUEST,\n  // });\n  // context.store.dispatch({\n  //     type: LOAD_USER_CALENDAR_DATA_REQUEST,\n  // });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}