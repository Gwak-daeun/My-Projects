{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Card, Checkbox, Col, Form, Input } from 'antd';\nimport useInput from \"../hooks/useInput\";\nimport AppLayout from \"../components/AppLayout\";\nimport styled from 'styled-components';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1qf8hnm-0\"\n})([\"color:red;\"]);\nconst OneMyInfo = styled.div.withConfig({\n  displayName: \"signup__OneMyInfo\",\n  componentId: \"sc-1qf8hnm-1\"\n})([\".card1{width:60%;margin:auto;margin-top:200px;margin-bottom:300px;}.form1{width:50%;margin:auto;}.login-form-button{background-color:black;color:white;}.col1{text-align :center;}\"]);\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUPError,\n    me\n  } = useSelector(state => state.user);\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUPError) {\n      alert(signUPError);\n    }\n  }, [signUPError]);\n  return __jsx(AppLayout, null, __jsx(OneMyInfo, null, __jsx(Col, {\n    className: \"col1\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), __jsx(Card, {\n    className: \"card1\"\n  }, __jsx(\"h1\", null, \"Sign up\"), __jsx(Form, {\n    name: \"normal_login\",\n    className: \"form1\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onSubmit\n  }, __jsx(Form.Item, {\n    name: \"username\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    name: \"name\",\n    placeholder: \"Username\",\n    value: nickname,\n    onChange: onChangeNickname,\n    required: true\n  })), __jsx(Form.Item, {\n    name: \"password\"\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    name: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: onChangePassword,\n    required: true\n  })), __jsx(Form.Item, null, __jsx(\"label\", {\n    htmlFor: \"password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    name: \"password-check\",\n    placeholder: \"Check Password\",\n    type: \"password\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    required: true\n  }), passwordError && __jsx(ErrorMessage, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(Form.Item, null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD6C4 \\uC544\\uC774\\uB514\\uB294 \\uBCC0\\uACBD \\uBD88\\uAC00 \\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, null, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(Form.Item, null, __jsx(Button, {\n    loading: signUpLoading,\n    htmlType: \"submit\",\n    className: \"login-form-button\"\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD558\\uAE30\")))))));\n};\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}