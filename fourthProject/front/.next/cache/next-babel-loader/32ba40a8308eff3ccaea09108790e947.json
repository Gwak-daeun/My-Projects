{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Card, Form, Rate, Row, Upload } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST, NEW_COMMENT_IMAGES_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nconst OneComment = styled.div.withConfig({\n  displayName: \"newComment__OneComment\",\n  componentId: \"sc-j00rf7-0\"\n})([\".card1{width:390px;height:665px;margin-left:740px;border-color:'#F0F0F0';}.rate1{font-size:50px;}.textArea1{height:110px;resize:'none';}\"]);\nconst NewComment = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: isUploading,\n    1: setIsUploading\n  } = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    imagePaths,\n    addCommentDone\n  } = useSelector(state => state.post);\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n  const [content, onChangeContent, setContent] = useInput('');\n  useEffect(() => {\n    if (addCommentDone === true) {\n      setContent('');\n      setFileList([]);\n      setValue(0);\n    }\n  }, [addCommentDone]);\n  const handleRate = value => {\n    setValue(value);\n    console.log(\"점수:::\" + value);\n  };\n  const onChangeImages = useCallback(({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  }, []);\n  const beforeUpload = file => {\n    const imageFormData = new FormData();\n    imageFormData.append('image', file);\n    if (isUploading) {\n      return false;\n    }\n    setIsUploading(true);\n    dispatch({\n      type: NEW_COMMENT_IMAGES_REQUEST,\n      data: imageFormData\n    }).then(() => {\n      setIsUploading(false);\n    }).catch(() => {\n      setIsUploading(false);\n    });\n    return false;\n  };\n\n  //미리보기\n  const onPreview = async file => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow === null || imgWindow === void 0 ? void 0 : imgWindow.document.write(image.outerHTML);\n  };\n\n  //댓글 등록\n  const onSubmit = useCallback(({\n    fileList: newFileList\n  }) => {\n    if (!content || !content.trim()) {\n      return alert('댓글 내용을 작성하세요.');\n    }\n    if (value === 0) {\n      return alert('별점으로 Look의 점수를 주세요.');\n    }\n    const formData = new FormData();\n    setFileList(fileList);\n    for (let i = 0; i < fileList.length; i++) {\n      formData.append('image', fileList[i].originFileObj);\n    }\n    formData.append('content', content);\n    formData.append('rate', value);\n    formData.append('postId', post.id);\n    formData.append('userId', id);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: formData\n    });\n  }, [content, value, imagePaths]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(\"div\", null, __jsx(OneComment, null, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(Card, {\n    className: \"card1\"\n  }, __jsx(Row, null, __jsx(\"h2\", null, \"Comment\")), __jsx(Row, null, __jsx(\"h2\", null, \"My rate is...\")), __jsx(Row, null, __jsx(Rate, {\n    className: \"rate1\",\n    onChange: handleRate,\n    value: value\n  })), __jsx(\"br\", null), __jsx(Row, null, __jsx(\"h2\", null, \"My commnet is...\")), __jsx(Row, null, \" \", __jsx(TextArea, {\n    showCount: true,\n    maxLength: 250,\n    value: content,\n    onChange: onChangeContent,\n    className: \"textArea1\"\n  })), __jsx(\"br\", null), __jsx(Row, null, __jsx(\"h2\", null, \"I recommend this!\")), __jsx(Row, null, __jsx(\"h3\", null, \"\\uC544\\uC774\\uD15C \\uCD94\\uCC9C\\uC740 2\\uAC1C\\uAE4C\\uC9C0 \\uAC00\\uB2A5\\uD574\\uC694.\")), __jsx(Row, null, __jsx(Upload, {\n    name: \"image\",\n    listType: \"picture-card\",\n    multiple: true,\n    fileList: fileList,\n    onChange: onChangeImages,\n    onPreview: onPreview,\n    onRemove: onRemoveImage,\n    beforeUpload: beforeUpload\n  }, fileList.length < 2 && 'Drag images or click')), __jsx(Button, {\n    htmlType: \"submit\"\n  }, \"\\uB313\\uAE00 \\uB2EC\\uAE30\")))));\n};\nexport default NewComment;","map":null,"metadata":{},"sourceType":"module"}