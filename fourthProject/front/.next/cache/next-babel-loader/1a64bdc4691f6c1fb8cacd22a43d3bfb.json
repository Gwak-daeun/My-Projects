{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport '../pages/css/myInfo.module.css';\nimport { Button, Card, Form, Input, Tooltip } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CHANGE_INFO_REQUEST, UPLOAD_PROFILE_IMAGE_REQUEST } from \"../reducers/user\";\nconst {\n  Meta\n} = Card;\nimport styled from \"styled-components\";\nconst OneMyInfo = styled.div.withConfig({\n  displayName: \"myInfo__OneMyInfo\",\n  componentId: \"sc-39z6fg-0\"\n})([\".card1{margin-left:15px;width:250px;}.img1{width:100%;height:350px;}\"]);\nconst MyInfo = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    changeInfoDone,\n    imagePaths\n  } = useSelector(state => state.user);\n  const {\n    0: previewImg,\n    1: setPreviewImg\n  } = useState(null);\n  const {\n    0: read,\n    1: setRead\n  } = useState(true);\n\n  // const [text, onChangeText, setText] = useInput('');\n\n  const {\n    0: myText,\n    1: setMyText\n  } = useState(me.info);\n  const onChangeMyText = useCallback(e => {\n    const value = e.target.value;\n    setMyText(myText => {\n      if (typeof value === 'object') {\n        return JSON.stringify(value);\n      } else {\n        return value;\n      }\n    });\n  }, []);\n  const imageInput = useRef();\n  useEffect(() => {\n    if (changeInfoDone) {\n      window.alert(\"내 정보 수정 완료!\");\n    }\n  }, [changeInfoDone]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n    setRead(false);\n  }, [imageInput.current]);\n\n  //유저 프로필 이미지 변경, 이미지 미리보기\n  const onChangeImages = useCallback(e => {\n    console.log('image:::', e.target.files);\n    const reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n    }\n    reader.onloadend = () => {\n      const previewImgUrl = reader.result;\n      if (previewImgUrl) {\n        setPreviewImg(previewImgUrl);\n      }\n    };\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('profile', f);\n    });\n    return dispatch({\n      type: UPLOAD_PROFILE_IMAGE_REQUEST,\n      data: imageFormData\n    });\n  });\n\n  //유저 정보 수정 요청\n  const onSubmit = useCallback(() => {\n    // if(!text || !text.trim()){\n    //     return alert('자기소개를 작성하세요.');\n    // }\n    const formData = new FormData();\n    formData.append('profile', imagePaths);\n    formData.append('info', myText);\n    console.log('text: ' + myText);\n    dispatch({\n      type: CHANGE_INFO_REQUEST,\n      data: formData\n    }\n    //  , Router.reload()\n    );\n  }, [myText, imagePaths]);\n  const cancelFix = useCallback(() => {\n    setRead(prev => !prev);\n  });\n\n  // console.log(\"me:::\" +JSON.stringify(me));\n\n  return __jsx(\"div\", null, __jsx(OneMyInfo, null, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(Card, {\n    title: \"My Info\",\n    className: \"card1\",\n    cover: me.Image.src === 'https://static.vecteezy.com/system/resources/previews/002/318/271/original/user-profile-icon-free-vector.jpg' ? __jsx(OneMyInfo, null, __jsx(\"img\", {\n      alt: \"example\",\n      src: previewImg ? previewImg : `https://static.vecteezy.com/system/resources/previews/002/318/271/original/user-profile-icon-free-vector.jpg`,\n      ref: imageInput,\n      className: \"img1\"\n    })) : __jsx(OneMyInfo, null, __jsx(\"img\", {\n      className: \"img1\",\n      src: previewImg ? previewImg : `http://localhost:3065/${me.Image.src}`\n    })),\n    actions: read ? [__jsx(Tooltip, {\n      placement: \"bottom\",\n      title: \"\\uD074\\uB9AD\\uD558\\uBA74 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\\uC640 \\uC790\\uAE30\\uC18C\\uAC1C\\uB97C \\uC218\\uC815\\uD560 \\uC218 \\uC788\\uC5B4\\uC694.\"\n    }, __jsx(Button, {\n      onClick: onClickImageUpload\n    }, __jsx(EditOutlined, {\n      key: \"edit\"\n    })))] : [__jsx(Button, {\n      key: \"save\",\n      htmlType: \"submit\"\n    }, \"save\"), __jsx(Button, {\n      key: \"cancel\",\n      onClick: cancelFix\n    }, \"cancel\")]\n  }, __jsx(\"input\", {\n    name: \"profile\",\n    type: \"file\",\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), __jsx(Meta, {\n    title: __jsx(Input, {\n      readOnly: read,\n      defaultValue: \"닉네임:  \" + me.nickname\n    }),\n    description: read ? __jsx(Input, {\n      readOnly: read,\n      defaultValue: me.info === null ? \"자기자신을 한 단어로 표현한다면?\" : \"한마디:  \" + myText\n    }) : __jsx(Input, {\n      readOnly: read,\n      placeholder: me.info,\n      onChange: onChangeMyText,\n      value: myText\n    })\n  })))));\n};\nexport default MyInfo;","map":null,"metadata":{},"sourceType":"module"}