{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Card, Col, Form, Input, Modal, Row, Switch, Tooltip } from 'antd';\nimport { HeartOutlined, HeartTwoTone, UploadOutlined } from '@ant-design/icons';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport AppLayout from '../../components/AppLayout';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../../reducers/user';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, RETWEET_REQUEST, UNLIKE_POST_REQUEST, UPDATE_POST_REQUEST, UPLOAD_UPDATE_LOOK_IMAGE_REQUEST } from '../../reducers/post';\nimport { useRouter } from 'next/router';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NewComment from '../../components/newComment';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport Comments from '../../components/comments';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeartPulse } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeartCrack } from '@fortawesome/free-solid-svg-icons';\nimport { faHouse } from '@fortawesome/free-solid-svg-icons';\nimport NoComments from '../../components/noComments';\nimport '../css/post[id].module.css';\nimport useInput from '../../hooks/useInput';\nvar Meta = Card.Meta;\nimport styled from 'styled-components';\nvar OneLook = styled.div.withConfig({\n  displayName: \"id__OneLook\",\n  componentId: \"sc-74jz14-0\"\n})([\".div1{width:1120px;position:relative;z-index:1;}.div2{width:30px;}.switch1{margin-left:900px;margin-top:36px;}.icon1{position:absolute;z-index:5;font-size:30px;margin-left:200px;margin-top:10px;}.icon2{position:absolute;z-index:5;font-size:30px;margin-left:243px;margin-top:10px;}.icon3{z-index:10;}.img1{margin-left:120px;margin-top:20px;height:330px;}.img2{height:550px;width:100%;}.button1{margin-left:188px;}.button2{background-color:black;color:white;margin-bottom:10px;}.button3{background-color:black;color:white;margin-bottom:10px;}.button4{margin-left:20%;margin-top:5px;background-color:black;color:white;}.button5{margin-left:10%;margin-top:5px;background-color:black;color:white;}.col1{float:left;}.card1{width:280px;z-index:1;}.card2{margin-left:15px;width:400px;}.card3{margin-top:24px;margin-left:15px;width:400px;height:245px;}.li1{display:inline-block;}.li2{display:inline-block;margin-left:10px;}.body1{text-align:center;}.input1{color:black;text-align:center;}.textArea1{height:110px;resize:none;margin-top:20px;}\"]);\nvar Post = function Post() {\n  var _singlePost$Images$, _singlePost$Images$2;\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector2.imagePaths,\n    singlePost = _useSelector2.singlePost,\n    retweetError = _useSelector2.retweetError,\n    retweetDone = _useSelector2.retweetDone,\n    updatePostDone = _useSelector2.updatePostDone,\n    likePostDone = _useSelector2.likePostDone;\n  var _useState = useState(true),\n    read = _useState[0],\n    setRead = _useState[1];\n  var _useState2 = useState(null),\n    previewImg = _useState2[0],\n    setPreviewImg = _useState2[1];\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    rtConent = _useInput2[0],\n    onChangeRtContent = _useInput2[1],\n    setRtContent = _useInput2[2];\n  useEffect(function () {\n    if (!(me && me.id)) {\n      alert(\"로그인 후 이용 가능합니다.\");\n      Router.push('/');\n    }\n    //로그인 아이디와 게시글 아이디가 같으면 수정, 삭제 활성화\n    if (me.id === singlePost.UserId) {\n      setRead(false);\n    }\n    if (updatePostDone === true) {\n      window.alert('Look 수정 완료.');\n    }\n    if (retweetError) {\n      window.alert(retweetError);\n      window.location.reload();\n    }\n    if (retweetDone === true) {\n      window.alert('인용 완료!');\n    }\n  }, [me && me.id, singlePost, updatePostDone, retweetError, retweetDone]);\n  var _useState3 = useState(singlePost.content),\n    content = _useState3[0],\n    setContent = _useState3[1];\n  var onChangeContent = useCallback(function (e) {\n    var contentValue = e.target.value;\n    setContent(contentValue);\n  }, []);\n  var _useState4 = useState(singlePost.top),\n    top = _useState4[0],\n    setTop = _useState4[1];\n  var onChangeTop = useCallback(function (e) {\n    var topValue = e.target.value;\n    setTop(topValue);\n  }, []);\n  var _useState5 = useState(singlePost.bottom),\n    bottom = _useState5[0],\n    setBottom = _useState5[1];\n  var onChangeBottom = useCallback(function (e) {\n    var bottomValue = e.target.value;\n    setBottom(bottomValue);\n  }, []);\n  var _useState6 = useState(singlePost.dress),\n    dress = _useState6[0],\n    setDress = _useState6[1];\n  var onChangeDress = useCallback(function (e) {\n    var dressValue = e.target.value;\n    setDress(dressValue);\n  }, []);\n  var _useState7 = useState(singlePost.shoes),\n    shoes = _useState7[0],\n    setShoes = _useState7[1];\n  var onChangeShoes = useCallback(function (e) {\n    var shoesValue = e.target.value;\n    setShoes(shoesValue);\n  }, []);\n  var _useState8 = useState(singlePost.acc),\n    acc = _useState8[0],\n    setAcc = _useState8[1];\n  var onChangeAcc = useCallback(function (e) {\n    var accValue = e.target.value;\n    setAcc(accValue);\n  }, []);\n  var _useState9 = useState(singlePost.outer),\n    outer = _useState9[0],\n    setOuter = _useState9[1];\n  var onChangeOuter = useCallback(function (e) {\n    var outerValue = e.target.value;\n    setOuter(outerValue);\n  }, []);\n  var _useState10 = useState(singlePost.lookName),\n    lookName = _useState10[0],\n    setLookName = _useState10[1];\n  var onChangeLookName = useCallback(function (e) {\n    var lookNameValue = e.target.value;\n    setLookName(lookNameValue);\n  }, []);\n  var imageInput = useRef();\n  var _useState11 = useState(true),\n    index = _useState11[0],\n    setIndex = _useState11[1];\n  var _useState12 = useState(false),\n    isModalOpen = _useState12[0],\n    setIsModalOpen = _useState12[1];\n  console.log(\"singlePost::::: \", singlePost);\n  console.log(\"me::::::\", me);\n  var liked = singlePost === null || singlePost === void 0 ? void 0 : singlePost.Likers[0];\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === singlePost.UserId;\n  });\n  console.log(\"좋아요: \", liked);\n\n  //해시태그 #붙여서 뿌리기\n  var tags = [];\n  for (var i = 0; i < singlePost.Hashtags.length; i++) {\n    if (singlePost.Hashtags !== undefined) {\n      tags.push(\"#\" + singlePost.Hashtags[i].name);\n    }\n  }\n\n  //댓글 쓰기, 보기 선택\n  var onSelect = function onSelect() {\n    setIndex(!index);\n    console.log(\"index: \", index);\n  };\n\n  //좋아요\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: id\n    });\n  }, [id]);\n\n  //좋아요 취소\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: id\n    });\n  }, [id]);\n\n  //팔로우\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: singlePost.UserId\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: singlePost.UserId\n      });\n    }\n  }, [isFollowing]);\n\n  //리트윗모달\n  var retweetModal = function retweetModal() {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    setIsModalOpen(true);\n  };\n\n  //리트윗\n  var retweetSubmit = useCallback(function () {\n    var formData = new FormData();\n    formData.append('content', rtConent);\n    formData.append('postId', singlePost.id);\n    dispatch({\n      type: RETWEET_REQUEST,\n      data: formData\n    }, setIsModalOpen(false));\n  }, [content]);\n\n  //리트윗 모달 창 닫기\n  var handleCancel = function handleCancel() {\n    setIsModalOpen(false);\n  };\n\n  //댓글 없을 때\n  var IfComments = function IfComments() {\n    if (index === false) {\n      if (singlePost.Comments.length === 0) {\n        return __jsx(NoComments, null);\n      } else {\n        return __jsx(Comments, {\n          post: singlePost\n        });\n      }\n    } else {\n      return null;\n    }\n  };\n\n  //이미지 수정을 위한 창 띄우기\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  //게시글 삭제 요청\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    if (confirm(\"이 Look을 삭제하시겠습니까?\")) {\n      return dispatch({\n        type: REMOVE_POST_REQUEST,\n        data: singlePost.id\n      }, Router.replace(\"/\"));\n    } else {\n      window.alert(\"삭제 취소\");\n    }\n  }, [id]);\n\n  //게시글 수정 요청\n  var onSubmit = useCallback(function () {\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', content);\n    formData.append('top', top);\n    formData.append('bottom', bottom);\n    formData.append('dress', dress);\n    formData.append('shoes', shoes);\n    formData.append('acc', acc);\n    formData.append('outer', outer);\n    formData.append('lookName', lookName);\n    formData.append('postId', id);\n    dispatch({\n      type: UPDATE_POST_REQUEST,\n      data: formData\n    });\n  }, [content, imagePaths]);\n\n  //이미지 미리보기\n  var onChangeImages = useCallback(function (e) {\n    var reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n    }\n    reader.onloadend = function () {\n      var previewImgUrl = reader.result;\n      if (previewImgUrl) {\n        setPreviewImg(previewImgUrl);\n      }\n    };\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    return dispatch({\n      type: UPLOAD_UPDATE_LOOK_IMAGE_REQUEST,\n      data: imageFormData\n    });\n  });\n  return __jsx(AppLayout, null, __jsx(OneLook, null, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(\"div\", {\n    className: \"div1\"\n  }, __jsx(Row, null, __jsx(\"h1\", null, \"DailyLook\"), __jsx(Switch, {\n    defaultChecked: index,\n    onChange: onSelect,\n    className: \"switch1\",\n    checkedChildren: \"\\uB313\\uAE00\\uC4F0\\uAE30\",\n    unCheckedChildren: \"\\uB313\\uAE00\\uBCF4\\uAE30\"\n  })), me.id === singlePost.UserId ? null : __jsx(OneLook, null, __jsx(Tooltip, {\n    title: \"\\uB0B4 \\uACC4\\uC815\\uC5D0 \\uC778\\uC6A9\\uD558\\uAE30\"\n  }, __jsx(FontAwesomeIcon, {\n    className: \"icon1\",\n    icon: faPenToSquare,\n    onClick: retweetModal\n  }))), __jsx(Modal, {\n    title: \"\\uC778\\uC6A9\\uD558\\uAE30\",\n    footer: null,\n    onCancel: handleCancel,\n    open: isModalOpen\n  }, __jsx(Form, {\n    onFinish: retweetSubmit\n  }, __jsx(Input.TextArea, {\n    value: rtConent,\n    onChange: onChangeRtContent,\n    maxLength: 200,\n    placeholder: \"\\uC778\\uC6A9 \\uBA54\\uBAA8\\uB97C \\uB0A8\\uACA8\\uBCF4\\uC138\\uC694.\"\n  }), __jsx(OneLook, null, \" \", __jsx(\"img\", {\n    className: \"img1\",\n    src: \"http://localhost:3065/\".concat((_singlePost$Images$ = singlePost.Images[0]) === null || _singlePost$Images$ === void 0 ? void 0 : _singlePost$Images$.src)\n  }), \" \"), __jsx(OneLook, null, \" \", __jsx(Button, {\n    className: \"button1\",\n    htmlType: \"submit\"\n  }, \"\\uC778\\uC6A9\\uD558\\uAE30\")))), liked ? __jsx(OneLook, null, __jsx(Tooltip, {\n    title: \"\\uC88B\\uC544\\uC694 \\uCDE8\\uC18C\"\n  }, __jsx(HeartTwoTone, {\n    onClick: onUnlike,\n    twoToneColor: \"#fc83c6\",\n    className: \"icon2\"\n  }))) : __jsx(OneLook, null, __jsx(Tooltip, {\n    title: \"\\uC88B\\uC544\\uC694\"\n  }, __jsx(HeartOutlined, {\n    onClick: onLike,\n    className: \"icon2\"\n  }))), __jsx(Col, {\n    className: \"col1\"\n  }, __jsx(\"input\", {\n    name: \"image\",\n    type: \"file\",\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), __jsx(Card, {\n    className: \"card1\",\n    cover: __jsx(OneLook, null, __jsx(\"img\", {\n      className: \"img2\",\n      alt: \"example\",\n      src: previewImg ? previewImg : \"http://localhost:3065/\".concat((_singlePost$Images$2 = singlePost.Images[0]) === null || _singlePost$Images$2 === void 0 ? void 0 : _singlePost$Images$2.src)\n    })),\n    actions: id && singlePost.UserId === me.id ? [__jsx(Tooltip, {\n      title: \"\\uC774\\uBBF8\\uC9C0 \\uC218\\uC815\"\n    }, __jsx(Button, {\n      onClick: onClickImageUpload\n    }, __jsx(UploadOutlined, {\n      key: \"upload\"\n    })))] : [__jsx(OneLook, null, isFollowing ? __jsx(Tooltip, {\n      title: \"\\uC5B8\\uD314\\uB85C\\uC6B0\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faHeartCrack,\n      fontSize: 20,\n      onClick: onClickButton,\n      className: \"icon3\"\n    })) : __jsx(Tooltip, {\n      title: isFollowing ? '언팔로우' : '팔로우'\n    }, __jsx(FontAwesomeIcon, {\n      icon: faHeartPulse,\n      fontSize: 20,\n      onClick: onClickButton,\n      className: \"icon3\",\n      key: \"unfollow\"\n    }))), __jsx(OneLook, null, __jsx(Tooltip, {\n      title: singlePost.User.nickname + \"의 홈 방문하기\"\n    }, __jsx(\"a\", {\n      href: \"http://localhost:3000/user/\".concat(singlePost.UserId)\n    }, __jsx(FontAwesomeIcon, {\n      icon: faHouse,\n      fontSize: 20,\n      className: \"icon3\",\n      key: \"home\"\n    }))))]\n  }, __jsx(Meta, {\n    title: \"글쓴이:  \" + singlePost.User.nickname\n  })), __jsx(Col, null, singlePost.Comments.length === 0 ? __jsx(\"h1\", null, \"No points yet.\") : __jsx(\"h1\", null, \"This look is...\", singlePost.rateAverage, \" points.\"), __jsx(Row, null, __jsx(\"h3\", null, __jsx(FontAwesomeIcon, {\n    className: \"icon4\",\n    icon: faPenToSquare\n  }), \"\\xA0 Refer: \", singlePost.References.length), __jsx(\"div\", {\n    className: \"div2\"\n  }), __jsx(\"h3\", null, __jsx(HeartOutlined, null), \"\\xA0 Like: \", singlePost.Likers.length)))), __jsx(Col, {\n    style: {\n      \"float\": 'left',\n      width: 500\n    }\n  }, __jsx(\"div\", null, __jsx(\"ul\", null, __jsx(\"li\", {\n    className: \"li1\"\n  }, __jsx(\"h3\", null, \"\\uB370\\uC77C\\uB9AC\\uB8E9 \\uC81C\\uBAA9\")), __jsx(\"li\", {\n    className: \"li2\"\n  }, __jsx(Input, {\n    name: \"lookname\",\n    readOnly: read,\n    value: lookName,\n    onChange: onChangeLookName\n  })))), __jsx(\"div\", null, __jsx(Card, {\n    className: \"card2\"\n  }, __jsx(Button, {\n    className: \"button2\",\n    block: true\n  }, \"Information\"), __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"\\uBD84\\uB958\"), __jsx(\"th\", null, \"\\uBE0C\\uB79C\\uB4DC\\uBA85\"))), __jsx(\"tbody\", {\n    className: \"body1\"\n  }, __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uC0C1\\uC758\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    name: \"top\",\n    value: top,\n    readOnly: read,\n    onChange: onChangeTop,\n    type: \"text\"\n  }))), __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uD558\\uC758\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    value: bottom,\n    readOnly: read,\n    onChange: onChangeBottom,\n    type: \"text\"\n  }))), __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uC6D0\\uD53C\\uC2A4\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    value: dress,\n    readOnly: read,\n    onChange: onChangeDress,\n    type: \"text\"\n  }))), __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uC544\\uC6B0\\uD130\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    value: outer,\n    readOnly: read,\n    onChange: onChangeOuter,\n    type: \"text\"\n  }))), __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uC2E0\\uBC1C\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    value: shoes,\n    readOnly: read,\n    onChange: onChangeShoes,\n    type: \"text\"\n  }))), __jsx(\"tr\", null, __jsx(\"td\", null, \" \", __jsx(Input, {\n    disabled: true,\n    defaultValue: \"\\uD328\\uC158\\uC7A1\\uD654\",\n    className: \"input1\"\n  })), __jsx(\"td\", null, \" \", __jsx(Input, {\n    value: acc,\n    readOnly: read,\n    onChange: onChangeAcc,\n    type: \"text\"\n  })))))), __jsx(Card, {\n    className: \"card3\"\n  }, __jsx(Button, {\n    className: \"button3\",\n    block: true\n  }, \"Daily Record \"), __jsx(\"h4\", null, \"\\uD574\\uC2DC\\uD0DC\\uADF8: \", tags), __jsx(TextArea, {\n    onChange: onChangeContent,\n    showCount: true,\n    maxLength: 250,\n    value: content,\n    readOnly: read,\n    className: \"textArea1\"\n  })), id && singlePost.UserId === me.id ? __jsx(React.Fragment, null, __jsx(OneLook, null, __jsx(Button, {\n    className: \"button4\",\n    onClick: onRemovePost\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\"), __jsx(Button, {\n    className: \"button5\",\n    htmlType: \"submit\"\n  }, \"\\uC218\\uC815\\uD558\\uAE30\"))) : null)))), __jsx(Col, null, index === true ? __jsx(NewComment, {\n    post: singlePost\n  }) : null, __jsx(IfComments, null)));\n};\nexport var __N_SSP = true;\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}