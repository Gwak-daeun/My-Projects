{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { CaretLeftOutlined, CaretRightOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, Form, Row } from \"antd\";\nimport { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Score from \"./score\";\nimport styled from \"styled-components\";\nimport { REMOVE_COMMENT_REQUEST } from \"../reducers/post\";\nvar OneComments = styled.div.withConfig({\n  displayName: \"comments__OneComments\",\n  componentId: \"sc-8a0us7-0\"\n})([\".card1{width:390px;height:665px;margin-left:740px;border-color:#F0F0F0;}.div1{margin-left:70px;}.icon1{font-size:30px;}.button1{margin-left:210px;margin-top:595px;position:absolute;}\"]);\nvar Comments = function Comments(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useState = useState([]),\n    fileList = _useState[0],\n    setFileList = _useState[1];\n  var _useState2 = useState(1),\n    currentPage = _useState2[0],\n    setCurrentPage = _useState2[1];\n  var _useState3 = useState(1),\n    postsPerPage = _useState3[0];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useState4 = useState({}),\n    value = _useState4[0],\n    setValue = _useState4[1];\n\n  // console.log(\"댓글: \", post.Comments);\n\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentComments = post.Comments.slice(indexOfFirstPost, indexOfLastPost);\n  var pageNumbers = [];\n  console.log(\"total opinions \" + post.Comments.length);\n  console.log(\"postsPerPage \" + postsPerPage);\n  for (var i = 1; i <= Math.ceil(post.Comments.length / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  var handleRate = function handleRate(value) {\n    setValue(value);\n    console.log(\"점수:::\" + value);\n  };\n\n  //댓글 다음 페이지로 이동\n  var upClick = function upClick() {\n    if (currentPage < pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      alert(\"마지막 댓글이에요.\");\n    }\n    ;\n  };\n\n  //댓글 이전 페이지로 이동\n  var downClick = function downClick() {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    } else {\n      alert(\"가장 최신 댓글이에요.\");\n    }\n    ;\n  };\n  var onRemoveComment = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    var formData = new FormData();\n    formData.append('PostId', singlePost.id);\n    formData.append('commentId', currentComments[0].id);\n    return dispatch({\n      type: REMOVE_COMMENT_REQUEST,\n      data: formData\n    }, window.location.reload());\n  }, [id]);\n  return __jsx(\"div\", null, __jsx(OneComments, null, __jsx(Form, {\n    encType: \"multipart/form-data\"\n  }, __jsx(Card, {\n    className: \"card1\"\n  }, __jsx(Col, null, id && currentComments[0].UserId === id ? __jsx(OneComments, null, __jsx(Button, {\n    type: \"danger\",\n    className: \"button1\",\n    onClick: onRemoveComment\n  }, \"\\uB313\\uAE00 \\uC0AD\\uC81C\")) : null, __jsx(Row, null, __jsx(\"h2\", null, \"Comment\"), __jsx(\"div\", {\n    className: \"div1\"\n  }, __jsx(CaretLeftOutlined, {\n    className: \"icon1\",\n    onClick: downClick\n  }), __jsx(CaretRightOutlined, {\n    className: \"icon1\",\n    onClick: upClick\n  })), __jsx(\"h3\", null, \" \", currentPage, \" / \", post.Comments.length, \" \"))), __jsx(Score, {\n    comments: currentComments\n  })))));\n};\nexport default Comments;","map":null,"metadata":{},"sourceType":"module"}