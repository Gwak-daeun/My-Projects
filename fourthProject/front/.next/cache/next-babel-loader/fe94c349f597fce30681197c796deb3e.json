{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createElement, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { LOAD_USER_CALENDAR_DATA_REQUEST } from \"../reducers/user\";\nimport styled from \"styled-components\";\nconst ImageTag = styled.img.withConfig({\n  displayName: \"dateCellRender__ImageTag\",\n  componentId: \"sc-sgnmcg-0\"\n})([\"width:60px;text-align:center;\"]);\nconst DateCellRender = value => {\n  const dispatch = useDispatch();\n  const {\n    userCalendarData,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_CALENDAR_DATA_REQUEST,\n      data: me.id\n    });\n  }, []);\n\n  // console.log(\"UserCalendarData:::::::::\" + JSON.stringify(userCalendarData));\n  // console.log(\"UserCalendarData길이: \", userCalendarData.length);\n\n  const getDayInfo = () => {\n    const calendarData = [];\n    let diaryMoment;\n    for (let i = 0; i < userCalendarData.length; i++) {\n      // console.log(\"생성 날짜\",  moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\"));\n      diaryMoment = moment(userCalendarData[i].createdAt).format(\"YYYY-MM-DD\");\n\n      // console.log(\"다이어리모맨트:\", diaryMoment);\n\n      if (diaryMoment) {\n        calendarData.push({\n          photo: userCalendarData[i].Images[0].src,\n          title: userCalendarData[i].lookName,\n          date: diaryMoment,\n          createdAt: userCalendarData[i].createdAt,\n          id: userCalendarData[i].id\n        });\n      }\n    }\n    return calendarData || [];\n  };\n  const PhotoRander = ({\n    date,\n    photo,\n    postId\n  }) => {\n    // console.log(\"캘린더 날짜: \", new Date(value).toLocaleDateString());\n\n    switch (moment(value).format(\"YY-MM-DD\")) {\n      case moment(date).format(\"YY-MM-DD\"):\n        return __jsx(\"div\", null, __jsx(\"a\", {\n          href: `http://localhost:3000/post/${postId}`\n        }, __jsx(ImageTag, {\n          src: `http://localhost:3065/${photo}`\n        })));\n      default:\n        return __jsx(\"div\", null);\n    }\n  };\n  const NameRander = ({\n    date,\n    name\n  }) => {\n    switch (moment(value).format(\"YY-MM-DD\")) {\n      case moment(date).format(\"YY-MM-DD\"):\n        return __jsx(\"h5\", null, name);\n      default:\n        return __jsx(\"div\", null);\n    }\n  };\n  const dayInfo = getDayInfo();\n  return __jsx(\"div\", null, dayInfo.map(info => __jsx(\"div\", {\n    key: info.id\n  }, __jsx(NameRander, {\n    date: info.createdAt,\n    name: info.title\n  }), __jsx(PhotoRander, {\n    postId: info.id,\n    date: info.createdAt,\n    photo: info.photo\n  }))));\n};\nexport default DateCellRender;","map":null,"metadata":{},"sourceType":"module"}